<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Executors on Dkron - Cloud native job scheduling system</title>
    <link>/v1.2/pro/executors/</link>
    <description>Recent content in Executors on Dkron - Cloud native job scheduling system</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/v1.2/pro/executors/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS ECS Executor</title>
      <link>/v1.2/pro/executors/ecs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/executors/ecs/</guid>
      <description>The ECS exeutor is capable of launching tasks in ECS clusters, then listen to a stream of CloudWatch Logs and return the output.
To configure a job to be run in ECS, the executor needs a JSON Task definition template or an already defined task in ECS.
To allow the ECS Task runner to run tasks, the machine running Dkron needs to have the appropriate permissions configured in AWS IAM:</description>
    </item>
    
    <item>
      <title>Docker executor</title>
      <link>/v1.2/pro/executors/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/executors/docker/</guid>
      <description>Docker executor can launch docker based cron jobs using the docker command of the target node.
This executor needs a recent version of docker to be available and configured in the target node.
Configuration To run a docker job create a job config with the docker executor as in this example:
{ &amp;#34;executor&amp;#34;: &amp;#34;docker&amp;#34;, &amp;#34;executor_config&amp;#34;: { &amp;#34;image&amp;#34;: &amp;#34;alpine&amp;#34;, //docker image to use &amp;#34;volumes&amp;#34;: &amp;#34;/logs:/var/log/&amp;#34;, //comma separated list of volume mappings &amp;#34;command&amp;#34;: &amp;#34;echo \&amp;#34;Hello from dkron\&amp;#34;&amp;#34;, //command to pass to run on container &amp;#34;env&amp;#34;: &amp;#34;ENVIRONMENT=variable&amp;#34; //environment variables to pass to the container } } </description>
    </item>
    
  </channel>
</rss>