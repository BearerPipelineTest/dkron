<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Processors on Dkron - Cloud native job scheduling system</title>
    <link>/v1.2/pro/processors/</link>
    <description>Recent content in Processors on Dkron - Cloud native job scheduling system</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/v1.2/pro/processors/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Elasticsearch processor</title>
      <link>/v1.2/pro/processors/elasticsearch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/processors/elasticsearch/</guid>
      <description>The Elasticsearch processor can fordward execution logs to an ES cluster. It need an already available Elasticsearch installation that is visible in the same network of the target node.
The output logs of the job execution will be stored in the indicated ES instace.
Configuration { &amp;#34;processors&amp;#34;: { &amp;#34;elasticsearch&amp;#34;: { &amp;#34;url&amp;#34;: &amp;#34;http://localhost:9200&amp;#34;, //comma separated list of Elasticsearch hosts urls (default: http://localhost:9200) &amp;#34;index&amp;#34;: &amp;#34;dkron_logs&amp;#34;, //desired index name (default: dkron_logs) &amp;#34;forward&amp;#34;: &amp;#34;false&amp;#34; //forward logs to the next processor (default: false) } } } </description>
    </item>
    
    <item>
      <title>Email processor</title>
      <link>/v1.2/pro/processors/email/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/processors/email/</guid>
      <description>The Email processor provides flexibility to job email notifications.
Configuration of the email processor is stored in a file named dkron-processor-email.yml in the same locations as dkron.yml, and should include a list of providers, it can include any number of providers.
Example:
provider1: host: smtp.myprovider.com port: 25 username: myusername password: mypassword from: cron@mycompany.com subjectPrefix: &amp;#39;[Staging] &amp;#39; Then configure each job with the following options:
Example:
{ &amp;#34;processors&amp;#34;: { &amp;#34;email&amp;#34;: { &amp;#34;provider&amp;#34;: &amp;#34;provider1&amp;#34;, &amp;#34;emails&amp;#34;: &amp;#34;team@mycompany.</description>
    </item>
    
    <item>
      <title>Slack processor</title>
      <link>/v1.2/pro/processors/slack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/processors/slack/</guid>
      <description>The Slack processor provides slack notifications with multiple configurations and rich format.
Configuration of the slack processor is stored in a file named dkron-processor-slack.yml in the same locations as dkron.yml, and should include a list of teams, it can include any number of teams.
Example:
team1: webhook_url: https://hooks.slack.com/services/XXXXXXXXXXXXXXXXXXX bot_name: Dkron Production Then configure each job with the following options:
Example:
{ &amp;#34;processors&amp;#34;: { &amp;#34;slack&amp;#34;: { &amp;#34;team&amp;#34;: &amp;#34;team1&amp;#34;, &amp;#34;channel&amp;#34;: &amp;#34;#cron-production&amp;#34;, &amp;#34;onSuccess&amp;#34;: true } } } By default the slack procesor doesn&amp;rsquo;t send notifications on job success, the onSuccess parameter, enables it, like in the previous example.</description>
    </item>
    
  </channel>
</rss>
