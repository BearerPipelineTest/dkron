<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dkron - Distributed job scheduling system</title>
    <link>/</link>
    <description>Recent content on Dkron - Distributed job scheduling system</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Apr 2017 18:36:24 +0200</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installation</title>
      <link>/basics/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/basics/installation/</guid>
      <description>Running the binary Download the packaged archive for your platform from the downloads page and extract the package to a shared location in your drive, like /opt/local/bin.
Run Dkron with default setting: dkron agent --server --bootstrap-expect=1
Navigate to http://localhost:8080
Installing the package Debian repo APT repository:
deb [trusted=yes] https://repo.distrib.works/apt/ / Then install: sudo apt-get install dkron
YUM repo YUM repository:
[dkron] name=Dkron Pro Private Repo baseurl=https://repo.distrib.works/yum/ enabled=1 gpgcheck=0 Then install: sudo yum install dkron</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>/v1.2/basics/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/basics/installation/</guid>
      <description>Running the binary Download the packaged archive for your platform from the downloads page and extract the package to a shared location in your drive, like /opt/local/bin.
Run Dkron with default setting: dkron agent --server
Navigate to http://localhost:8080
By default dkron will start with a file based, embedded KV store called BoltDB, it is functional for a single node demo but does not offers clustering or HA.
 Installing the package Debian repo APT repository:</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>/v2.0/basics/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/basics/installation/</guid>
      <description>Running the binary Download the packaged archive for your platform from the downloads page and extract the package to a shared location in your drive, like /opt/local/bin.
Run Dkron with default setting: dkron agent --server --bootstrap-expect=1
Navigate to http://localhost:8080
Installing the package Debian repo APT repository:
deb [trusted=yes] https://apt.fury.io/distribworks/ / Then install: sudo apt-get install dkron
YUM repo YUM repository:
[dkron] name=Dkron Pro Private Repo baseurl=https://yum.fury.io/distribworks/ enabled=1 gpgcheck=0 Then install: sudo yum install dkron</description>
    </item>
    
    <item>
      <title>Quick start</title>
      <link>/v1.2/pro/quick-start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/quick-start/</guid>
      <description>Getting started Dkron Pro provides a clustering backend store out of the box based on etcd.
To configure the storage a sample etcd.conf.yaml file is provided in /etc/dkron path. Editing the file, allows to configure several options for the embedded store.
The location of the store configuration can be set in the command line or in the dkron config file /etc/dkron/dkron.yml using etcd-config-file-path parameter.
Starting a single node Works out of the box, good for non HA installations.</description>
    </item>
    
    <item>
      <title>Target nodes spec</title>
      <link>/usage/target-nodes-spec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/target-nodes-spec/</guid>
      <description>Target nodes spec Dkron has the ability to run jobs in specific nodes by leveraging the use of tags. You can choose whether a job is run on a node or group of nodes by specifying tags and a count of target nodes having this tag do you want a job to run.
The target node syntax is:
&amp;quot;tag&amp;quot;: &amp;quot;value[:count]&amp;quot;  To achieve this Nodes and Jobs have tags, for example, having a node with the following tags:</description>
    </item>
    
    <item>
      <title>Target nodes spec</title>
      <link>/v1.2/usage/target-nodes-spec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/usage/target-nodes-spec/</guid>
      <description>Target nodes spec You can choose whether a job is run on a node or nodes by specifying tags and a count of target nodes having this tag do you want a job to run.
The target node syntax: [tag-value]:[count]
 Examples: Target all nodes with a tag:
{ &amp;#34;name&amp;#34;: &amp;#34;job_name&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;/bin/true&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 2m&amp;#34;, &amp;#34;tags&amp;#34;: { &amp;#34;role&amp;#34;: &amp;#34;web&amp;#34; } } mermaid.initialize({startOnLoad:true}); graph LR; J(&#34;Job tags: #quot;role#quot;: #quot;web#quot;&#34;) --|Run Job|N1[&#34;</description>
    </item>
    
    <item>
      <title>Target nodes spec</title>
      <link>/v2.0/usage/target-nodes-spec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/target-nodes-spec/</guid>
      <description>Target nodes spec You can choose whether a job is run on a node or nodes by specifying tags and a count of target nodes having this tag do you want a job to run.
The target node syntax: [tag-value]:[count]
 Examples: Target all nodes with a tag:
{ &amp;#34;name&amp;#34;: &amp;#34;job_name&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;/bin/true&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 2m&amp;#34;, &amp;#34;tags&amp;#34;: { &amp;#34;my_role&amp;#34;: &amp;#34;web&amp;#34; } } mermaid.initialize({startOnLoad:true}); graph LR; J(&#34;Job tags: #quot;my_role#quot;: #quot;web#quot;&#34;) --|Run Job|N1[&#34;</description>
    </item>
    
    <item>
      <title>Cron spec</title>
      <link>/usage/cron-spec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/cron-spec/</guid>
      <description>CRON Expression Format A cron expression represents a set of times, using 6 space-separated fields.
Field name | Mandatory? | Allowed values | Allowed special characters ---------- | ---------- | -------------- | -------------------------- Seconds | Yes | 0-59 | * / , - Minutes | Yes | 0-59 | * / , - Hours | Yes | 0-23 | * / , - Day of month | Yes | 1-31 | * / , - ?</description>
    </item>
    
    <item>
      <title>Cron spec</title>
      <link>/v1.2/usage/cron-spec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/usage/cron-spec/</guid>
      <description>CRON Expression Format A cron expression represents a set of times, using 6 space-separated fields.
Field name | Mandatory? | Allowed values | Allowed special characters ---------- | ---------- | -------------- | -------------------------- Seconds | Yes | 0-59 | * / , - Minutes | Yes | 0-59 | * / , - Hours | Yes | 0-23 | * / , - Day of month | Yes | 1-31 | * / , - ?</description>
    </item>
    
    <item>
      <title>Cron spec</title>
      <link>/v2.0/usage/cron-spec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/cron-spec/</guid>
      <description>CRON Expression Format A cron expression represents a set of times, using 6 space-separated fields.
Field name | Mandatory? | Allowed values | Allowed special characters ---------- | ---------- | -------------- | -------------------------- Seconds | Yes | 0-59 | * / , - Minutes | Yes | 0-59 | * / , - Hours | Yes | 0-23 | * / , - Day of month | Yes | 1-31 | * / , - ?</description>
    </item>
    
    <item>
      <title>Getting started</title>
      <link>/basics/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/basics/getting-started/</guid>
      <description>Introduction Dkron nodes can work in two modes, agents or servers.
A Dkron agent is a cluster member that can handle job executions, run your scripts and return the resulting output to the server.
A Dkron server is also a cluster member that send job execution queries to agents or other servers, so servers can execute jobs too.
The main distinction is that servers order job executions, can be used to schedule jobs, handles data storage and participate on leader election.</description>
    </item>
    
    <item>
      <title>Getting started</title>
      <link>/v1.2/basics/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/basics/getting-started/</guid>
      <description>Introduction Dkron nodes can work in two modes, agents or servers.
A Dkron agent is a cluster member that can handle job executions, run your scripts and return the resulting output to the server.
A Dkron server is also a cluster member that send job execution queries to agents or other servers, so servers can execute jobs too.
The main distinction is that servers order job executions, can be used to schedule jobs, handles data storage and participate on leader election.</description>
    </item>
    
    <item>
      <title>Getting started</title>
      <link>/v2.0/basics/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/basics/getting-started/</guid>
      <description>Introduction Dkron nodes can work in two modes, agents or servers.
A Dkron agent is a cluster member that can handle job executions, run your scripts and return the resulting output to the server.
A Dkron server is also a cluster member that send job execution queries to agents or other servers, so servers can execute jobs too.
The main distinction is that servers order job executions, can be used to schedule jobs, handles data storage and participate on leader election.</description>
    </item>
    
    <item>
      <title>Developing plugins</title>
      <link>/usage/plugins/develop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/plugins/develop/</guid>
      <description>Developing a Plugin Advanced topic! Plugin development is a highly advanced topic, and is not required knowledge for day-to-day usage. If you don&amp;rsquo;t plan on writing any plugins, we recommend not reading the following section of the documentation.
 Developing a plugin is simple. The only knowledge necessary to write a plugin is basic command-line skills and basic knowledge of the Go programming language.
Note: A common pitfall is not properly setting up a $GOPATH.</description>
    </item>
    
    <item>
      <title>Developing plugins</title>
      <link>/v1.2/usage/plugins/develop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/usage/plugins/develop/</guid>
      <description>Developing a Plugin Advanced topic! Plugin development is a highly advanced topic, and is not required knowledge for day-to-day usage. If you don&amp;rsquo;t plan on writing any plugins, we recommend not reading the following section of the documentation. Developing a plugin is simple. The only knowledge necessary to write a plugin is basic command-line skills and basic knowledge of the Go programming language.
Note: A common pitfall is not properly setting up a $GOPATH.</description>
    </item>
    
    <item>
      <title>Developing plugins</title>
      <link>/v2.0/usage/plugins/develop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/plugins/develop/</guid>
      <description>Developing a Plugin Advanced topic! Plugin development is a highly advanced topic, and is not required knowledge for day-to-day usage. If you don&amp;rsquo;t plan on writing any plugins, we recommend not reading the following section of the documentation. Developing a plugin is simple. The only knowledge necessary to write a plugin is basic command-line skills and basic knowledge of the Go programming language.
Note: A common pitfall is not properly setting up a $GOPATH.</description>
    </item>
    
    <item>
      <title>dkron</title>
      <link>/cli/dkron/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/cli/dkron/</guid>
      <description>dkron Open source distributed job scheduling system
Synopsis Dkron is a system service that runs scheduled jobs at given intervals or times, just like the cron unix service but distributed in several machines in a cluster. If a machine fails (the leader), a follower will take over and keep running the scheduled jobs without human intervention.
Options  --config string config file path -h, --help help for dkron SEE ALSO  dkron agent	- Start a dkron agent dkron doc	- Generate Markdown documentation for the Dkron CLI.</description>
    </item>
    
    <item>
      <title>dkron</title>
      <link>/pro/cli/dkron/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/pro/cli/dkron/</guid>
      <description>dkron Professional distributed job scheduling system
Synopsis Dkron is a system service that runs scheduled jobs at given intervals or times, just like the cron unix service but distributed in several machines in a cluster. If a machine fails (the leader), a follower will take over and keep running the scheduled jobs without human intervention.
Options  --config string config file (default is /etc/dkron/dkron.yml) -h, --help help for dkron SEE ALSO  dkron agent	- Start a dkron agent dkron doc	- Generate Markdown documentation for the Dkron CLI.</description>
    </item>
    
    <item>
      <title>dkron agent</title>
      <link>/cli/dkron_agent/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/cli/dkron_agent/</guid>
      <description>dkron agent Start a dkron agent
Synopsis Start a dkron agent that schedules jobs, listens for executions and runs executors. It also runs a web UI.
dkron agent [flags] Options  --advertise-addr string Address used to advertise to other nodes in the cluster. By default, the bind address is advertised. The value supports go-sockaddr/template format. --advertise-rpc-port int Use the value of rpc-port by default --bind-addr string Specifies which address the agent should bind to for network services, including the internal gossip protocol and RPC mechanism.</description>
    </item>
    
    <item>
      <title>dkron agent</title>
      <link>/pro/cli/dkron_agent/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/pro/cli/dkron_agent/</guid>
      <description>dkron agent Start a dkron agent
Synopsis Start a dkron agent that schedule jobs, listen for executions and run executors. It also runs a web UI.
dkron agent [flags] Options  --advertise-addr string Address used to advertise to other nodes in the cluster. By default, the bind address is advertised. The value supports go-sockaddr/template format. --advertise-rpc-port int Use the value of rpc-port by default --auto-tls Client TLS using generated certificates (default true) --bind-addr string Specifies which address the agent should bind to for network services, including the internal gossip protocol and RPC mechanism.</description>
    </item>
    
    <item>
      <title>dkron doc</title>
      <link>/cli/dkron_doc/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/cli/dkron_doc/</guid>
      <description>dkron doc Generate Markdown documentation for the Dkron CLI.
Synopsis Generate Markdown documentation for the Dkron CLI. This command is, mostly, used to create up-to-date documentation of Dkron&amp;rsquo;s command-line interface for http://dkron.io/. It creates one Markdown file per command with front matter suitable for rendering in Hugo.
dkron doc [flags] Options  --dir string the directory to write the doc. (default &amp;quot;/tmp/dkrondoc/&amp;quot;) -h, --help help for doc Options inherited from parent commands  --config string config file path SEE ALSO  dkron	- Open source distributed job scheduling system  Auto generated by spf13/cobra on 15-May-2020 </description>
    </item>
    
    <item>
      <title>dkron doc</title>
      <link>/pro/cli/dkron_doc/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/pro/cli/dkron_doc/</guid>
      <description>dkron doc Generate Markdown documentation for the Dkron CLI.
Synopsis Generate Markdown documentation for the Dkron CLI. This command is, mostly, used to create up-to-date documentation of Dkron&amp;rsquo;s command-line interface for http://dkron.io/. It creates one Markdown file per command with front matter suitable for rendering in Hugo.
dkron doc [flags] Options  --dir string the directory to write the doc. (default &amp;quot;/tmp/dkrondoc/&amp;quot;) -h, --help help for doc Options inherited from parent commands  --config string config file (default is /etc/dkron/dkron.</description>
    </item>
    
    <item>
      <title>dkron keygen</title>
      <link>/cli/dkron_keygen/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/cli/dkron_keygen/</guid>
      <description>dkron keygen Generates a new encryption key
Synopsis Generates a new encryption key that can be used to configure the agent to encrypt traffic. The output of this command is already in the proper format that the agent expects.
dkron keygen [flags] Options  -h, --help help for keygen Options inherited from parent commands  --config string config file path SEE ALSO  dkron	- Open source distributed job scheduling system  Auto generated by spf13/cobra on 15-May-2020 </description>
    </item>
    
    <item>
      <title>dkron keygen</title>
      <link>/pro/cli/dkron_keygen/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/pro/cli/dkron_keygen/</guid>
      <description>dkron keygen Generates a new encryption key
Synopsis Generates a new encryption key that can be used to configure the agent to encrypt traffic. The output of this command is already in the proper format that the agent expects.
dkron keygen [flags] Options  -h, --help help for keygen Options inherited from parent commands  --config string config file (default is /etc/dkron/dkron.yml) SEE ALSO  dkron	- Professional distributed job scheduling system  Auto generated by spf13/cobra on 15-May-2020 </description>
    </item>
    
    <item>
      <title>dkron leave</title>
      <link>/cli/dkron_leave/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/cli/dkron_leave/</guid>
      <description>dkron leave Force an agent to leave the cluster
Synopsis Stop stops an agent, if the agent is a server and is running for election stop running for election, if this server was the leader this will force the cluster to elect a new leader and start a new scheduler.
dkron leave [flags] Options  -h, --help help for leave --rpc-addr string gRPC address of the agent (default &amp;quot;{{ GetPrivateIP }}:6868&amp;quot;) Options inherited from parent commands  --config string config file path SEE ALSO  dkron	- Open source distributed job scheduling system  Auto generated by spf13/cobra on 15-May-2020 </description>
    </item>
    
    <item>
      <title>dkron leave</title>
      <link>/pro/cli/dkron_leave/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/pro/cli/dkron_leave/</guid>
      <description>dkron leave Force an agent to leave the cluster
Synopsis Stop stops an agent, if the agent is a server and is running for election stop running for election, if this server was the leader this will force the cluster to elect a new leader and start a new scheduler. If this is a server and has the scheduler started stop it, ignoring if this server was participating in leader election or not (local storage).</description>
    </item>
    
    <item>
      <title>dkron raft</title>
      <link>/cli/dkron_raft/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/cli/dkron_raft/</guid>
      <description>dkron raft Command to perform some raft operations
Synopsis Command to perform some raft operations
Options  -h, --help help for raft --rpc-addr string gRPC address of the agent. (default &amp;quot;{{ GetPrivateIP }}:6868&amp;quot;) Options inherited from parent commands  --config string config file path SEE ALSO  dkron	- Open source distributed job scheduling system dkron raft list-peers	- Command to list raft peers dkron raft remove-peer	- Command to list raft peers  Auto generated by spf13/cobra on 15-May-2020 </description>
    </item>
    
    <item>
      <title>dkron raft</title>
      <link>/pro/cli/dkron_raft/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/pro/cli/dkron_raft/</guid>
      <description>dkron raft Command to perform some raft operations
Synopsis Command to perform some raft operations
Options  --cert-file string Path to the client server TLS cert file -h, --help help for raft --key-file string Path to the client server TLS key file --rpc-addr string gRPC address of the agent. (default &amp;quot;{{ GetPrivateIP }}:6868&amp;quot;) --trusted-ca-file string Path to the client server TLS trusted CA cert file Options inherited from parent commands  --config string config file (default is /etc/dkron/dkron.</description>
    </item>
    
    <item>
      <title>dkron raft list-peers</title>
      <link>/cli/dkron_raft_list-peers/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/cli/dkron_raft_list-peers/</guid>
      <description>dkron raft list-peers Command to list raft peers
Synopsis Command to list raft peers
dkron raft list-peers [flags] Options  -h, --help help for list-peers Options inherited from parent commands  --config string config file path --rpc-addr string gRPC address of the agent. (default &amp;quot;{{ GetPrivateIP }}:6868&amp;quot;) SEE ALSO  dkron raft	- Command to perform some raft operations  Auto generated by spf13/cobra on 15-May-2020 </description>
    </item>
    
    <item>
      <title>dkron raft list-peers</title>
      <link>/pro/cli/dkron_raft_list-peers/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/pro/cli/dkron_raft_list-peers/</guid>
      <description>dkron raft list-peers Command to list raft peers
Synopsis Command to list raft peers
dkron raft list-peers [flags] Options  -h, --help help for list-peers Options inherited from parent commands  --cert-file string Path to the client server TLS cert file --config string config file (default is /etc/dkron/dkron.yml) --key-file string Path to the client server TLS key file --rpc-addr string gRPC address of the agent. (default &amp;quot;{{ GetPrivateIP }}:6868&amp;quot;) --trusted-ca-file string Path to the client server TLS trusted CA cert file SEE ALSO  dkron raft	- Command to perform some raft operations  Auto generated by spf13/cobra on 15-May-2020 </description>
    </item>
    
    <item>
      <title>dkron raft remove-peer</title>
      <link>/cli/dkron_raft_remove-peer/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/cli/dkron_raft_remove-peer/</guid>
      <description>dkron raft remove-peer Command to list raft peers
Synopsis Command to list raft peers
dkron raft remove-peer [flags] Options  -h, --help help for remove-peer --peer-id string Remove a Dkron server with the given ID from the Raft configuration. Options inherited from parent commands  --config string config file path --rpc-addr string gRPC address of the agent. (default &amp;quot;{{ GetPrivateIP }}:6868&amp;quot;) SEE ALSO  dkron raft	- Command to perform some raft operations  Auto generated by spf13/cobra on 15-May-2020 </description>
    </item>
    
    <item>
      <title>dkron raft remove-peer</title>
      <link>/pro/cli/dkron_raft_remove-peer/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/pro/cli/dkron_raft_remove-peer/</guid>
      <description>dkron raft remove-peer Command to list raft peers
Synopsis Command to list raft peers
dkron raft remove-peer [flags] Options  -h, --help help for remove-peer --peer-id string Remove a Dkron server with the given ID from the Raft configuration. Options inherited from parent commands  --cert-file string Path to the client server TLS cert file --config string config file (default is /etc/dkron/dkron.yml) --key-file string Path to the client server TLS key file --rpc-addr string gRPC address of the agent.</description>
    </item>
    
    <item>
      <title>dkron version</title>
      <link>/cli/dkron_version/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/cli/dkron_version/</guid>
      <description>dkron version Show version
Synopsis Show the version
dkron version [flags] Options  -h, --help help for version Options inherited from parent commands  --config string config file path SEE ALSO  dkron	- Open source distributed job scheduling system  Auto generated by spf13/cobra on 15-May-2020 </description>
    </item>
    
    <item>
      <title>dkron version</title>
      <link>/pro/cli/dkron_version/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/pro/cli/dkron_version/</guid>
      <description>dkron version Show version
Synopsis Show the version
dkron version [flags] Options  -h, --help help for version Options inherited from parent commands  --config string config file (default is /etc/dkron/dkron.yml) SEE ALSO  dkron	- Professional distributed job scheduling system  Auto generated by spf13/cobra on 15-May-2020 </description>
    </item>
    
    <item>
      <title>dkron</title>
      <link>/v2.0/cli/dkron/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/cli/dkron/</guid>
      <description>dkron Open source distributed job scheduling system
Synopsis Dkron is a system service that runs scheduled jobs at given intervals or times, just like the cron unix service but distributed in several machines in a cluster. If a machine fails (the leader), a follower will take over and keep running the scheduled jobs without human intervention.
Options  --config string config file path -h, --help help for dkron SEE ALSO  dkron agent	- Start a dkron agent dkron doc	- Generate Markdown documentation for the Dkron CLI.</description>
    </item>
    
    <item>
      <title>dkron agent</title>
      <link>/v2.0/cli/dkron_agent/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/cli/dkron_agent/</guid>
      <description>dkron agent Start a dkron agent
Synopsis Start a dkron agent that schedules jobs, listens for executions and runs executors. It also runs a web UI.
dkron agent [flags] Options  --advertise-addr string Address used to advertise to other nodes in the cluster. By default, the bind address is advertised. The value supports go-sockaddr/template format. --advertise-rpc-port int Use the value of rpc-port by default --bind-addr string Specifies which address the agent should bind to for network services, including the internal gossip protocol and RPC mechanism.</description>
    </item>
    
    <item>
      <title>dkron doc</title>
      <link>/v2.0/cli/dkron_doc/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/cli/dkron_doc/</guid>
      <description>dkron doc Generate Markdown documentation for the Dkron CLI.
Synopsis Generate Markdown documentation for the Dkron CLI. This command is, mostly, used to create up-to-date documentation of Dkron&amp;rsquo;s command-line interface for http://dkron.io/. It creates one Markdown file per command with front matter suitable for rendering in Hugo.
dkron doc [flags] Options  --dir string the directory to write the doc. (default &amp;quot;/tmp/dkrondoc/&amp;quot;) -h, --help help for doc Options inherited from parent commands  --config string config file path SEE ALSO  dkron	- Open source distributed job scheduling system  Auto generated by spf13/cobra on 10-Oct-2019 </description>
    </item>
    
    <item>
      <title>dkron keygen</title>
      <link>/v2.0/cli/dkron_keygen/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/cli/dkron_keygen/</guid>
      <description>dkron keygen Generates a new encryption key
Synopsis Generates a new encryption key that can be used to configure the agent to encrypt traffic. The output of this command is already in the proper format that the agent expects.
dkron keygen [flags] Options  -h, --help help for keygen Options inherited from parent commands  --config string config file path SEE ALSO  dkron	- Open source distributed job scheduling system  Auto generated by spf13/cobra on 10-Oct-2019 </description>
    </item>
    
    <item>
      <title>dkron leave</title>
      <link>/v2.0/cli/dkron_leave/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/cli/dkron_leave/</guid>
      <description>dkron leave Force an agent to leave the cluster
Synopsis Stop stops an agent, if the agent is a server and is running for election stop running for election, if this server was the leader this will force the cluster to elect a new leader and start a new scheduler.
dkron leave [flags] Options  -h, --help help for leave --rpc-addr string gRPC address of the agent (default &amp;quot;127.0.0.1:6868&amp;quot;) Options inherited from parent commands  --config string config file path SEE ALSO  dkron	- Open source distributed job scheduling system  Auto generated by spf13/cobra on 10-Oct-2019 </description>
    </item>
    
    <item>
      <title>dkron raft</title>
      <link>/v2.0/cli/dkron_raft/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/cli/dkron_raft/</guid>
      <description>dkron raft Command to perform some raft operations
Synopsis Command to perform some raft operations
Options  -h, --help help for raft --rpc-addr string gRPC address of the agent (default &amp;quot;127.0.0.1:6868&amp;quot;) Options inherited from parent commands  --config string config file path SEE ALSO  dkron	- Open source distributed job scheduling system dkron raft list-peers	- Command to list raft peers dkron raft remove-peer	- Command to list raft peers  Auto generated by spf13/cobra on 10-Oct-2019 </description>
    </item>
    
    <item>
      <title>dkron raft list-peers</title>
      <link>/v2.0/cli/dkron_raft_list-peers/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/cli/dkron_raft_list-peers/</guid>
      <description>dkron raft list-peers Command to list raft peers
Synopsis Command to list raft peers
dkron raft list-peers [flags] Options  -h, --help help for list-peers Options inherited from parent commands  --config string config file path --rpc-addr string gRPC address of the agent (default &amp;quot;127.0.0.1:6868&amp;quot;) SEE ALSO  dkron raft	- Command to perform some raft operations  Auto generated by spf13/cobra on 10-Oct-2019 </description>
    </item>
    
    <item>
      <title>dkron raft remove-peer</title>
      <link>/v2.0/cli/dkron_raft_remove-peer/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/cli/dkron_raft_remove-peer/</guid>
      <description>dkron raft remove-peer Command to list raft peers
Synopsis Command to list raft peers
dkron raft remove-peer [flags] Options  -h, --help help for remove-peer --peer-id string Remove a Dkron server with the given ID from the Raft configuration. Options inherited from parent commands  --config string config file path --rpc-addr string gRPC address of the agent (default &amp;quot;127.0.0.1:6868&amp;quot;) SEE ALSO  dkron raft	- Command to perform some raft operations  Auto generated by spf13/cobra on 10-Oct-2019 </description>
    </item>
    
    <item>
      <title>dkron version</title>
      <link>/v2.0/cli/dkron_version/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/cli/dkron_version/</guid>
      <description>dkron version Show version
Synopsis Show the version
dkron version [flags] Options  -h, --help help for version Options inherited from parent commands  --config string config file path SEE ALSO  dkron	- Open source distributed job scheduling system  Auto generated by spf13/cobra on 10-Oct-2019 </description>
    </item>
    
    <item>
      <title>dkron</title>
      <link>/2.0/pro/cli/dkron/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2.0/pro/cli/dkron/</guid>
      <description>dkron Professional distributed job scheduling system
Synopsis Dkron is a system service that runs scheduled jobs at given intervals or times, just like the cron unix service but distributed in several machines in a cluster. If a machine fails (the leader), a follower will take over and keep running the scheduled jobs without human intervention.
Options  --config string config file (default is /etc/dkron/dkron.yml) -h, --help help for dkron SEE ALSO  dkron agent	- Start a dkron agent dkron doc	- Generate Markdown documentation for the Dkron CLI.</description>
    </item>
    
    <item>
      <title>dkron agent</title>
      <link>/2.0/pro/cli/dkron_agent/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2.0/pro/cli/dkron_agent/</guid>
      <description>dkron agent Start a dkron agent
Synopsis Start a dkron agent that schedule jobs, listen for executions and run executors. It also runs a web UI.
dkron agent [flags] Options  --advertise-addr string Address used to advertise to other nodes in the cluster. By default, the bind address is advertised. The value supports go-sockaddr/template format. --advertise-rpc-port int Use the value of rpc-port by default --auto-tls Client TLS using generated certificates (default true) --bind-addr string Specifies which address the agent should bind to for network services, including the internal gossip protocol and RPC mechanism.</description>
    </item>
    
    <item>
      <title>dkron doc</title>
      <link>/2.0/pro/cli/dkron_doc/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2.0/pro/cli/dkron_doc/</guid>
      <description>dkron doc Generate Markdown documentation for the Dkron CLI.
Synopsis Generate Markdown documentation for the Dkron CLI. This command is, mostly, used to create up-to-date documentation of Dkron&amp;rsquo;s command-line interface for http://dkron.io/. It creates one Markdown file per command with front matter suitable for rendering in Hugo.
dkron doc [flags] Options  --dir string the directory to write the doc. (default &amp;quot;/tmp/dkrondoc/&amp;quot;) -h, --help help for doc Options inherited from parent commands  --config string config file (default is /etc/dkron/dkron.</description>
    </item>
    
    <item>
      <title>dkron keygen</title>
      <link>/2.0/pro/cli/dkron_keygen/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2.0/pro/cli/dkron_keygen/</guid>
      <description>dkron keygen Generates a new encryption key
Synopsis Generates a new encryption key that can be used to configure the agent to encrypt traffic. The output of this command is already in the proper format that the agent expects.
dkron keygen [flags] Options  -h, --help help for keygen Options inherited from parent commands  --config string config file (default is /etc/dkron/dkron.yml) SEE ALSO  dkron	- Professional distributed job scheduling system  Auto generated by spf13/cobra on 26-Aug-2019 </description>
    </item>
    
    <item>
      <title>dkron leave</title>
      <link>/2.0/pro/cli/dkron_leave/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2.0/pro/cli/dkron_leave/</guid>
      <description>dkron leave Force an agent to leave the cluster
Synopsis Stop stops an agent, if the agent is a server and is running for election stop running for election, if this server was the leader this will force the cluster to elect a new leader and start a new scheduler. If this is a server and has the scheduler started stop it, ignoring if this server was participating in leader election or not (local storage).</description>
    </item>
    
    <item>
      <title>dkron raft</title>
      <link>/2.0/pro/cli/dkron_raft/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2.0/pro/cli/dkron_raft/</guid>
      <description>dkron raft Command to perform some raft operations
Synopsis Command to perform some raft operations
Options  --cert-file string Path to the client server TLS cert file -h, --help help for raft --key-file string Path to the client server TLS key file --rpc-addr string gRPC address of the agent (default &amp;quot;127.0.0.1:6868&amp;quot;) --trusted-ca-file string Path to the client server TLS trusted CA cert file Options inherited from parent commands  --config string config file (default is /etc/dkron/dkron.</description>
    </item>
    
    <item>
      <title>dkron raft list-peers</title>
      <link>/2.0/pro/cli/dkron_raft_list-peers/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2.0/pro/cli/dkron_raft_list-peers/</guid>
      <description>dkron raft list-peers Command to list raft peers
Synopsis Command to list raft peers
dkron raft list-peers [flags] Options  -h, --help help for list-peers Options inherited from parent commands  --cert-file string Path to the client server TLS cert file --config string config file (default is /etc/dkron/dkron.yml) --key-file string Path to the client server TLS key file --rpc-addr string gRPC address of the agent (default &amp;quot;127.0.0.1:6868&amp;quot;) --trusted-ca-file string Path to the client server TLS trusted CA cert file SEE ALSO  dkron raft	- Command to perform some raft operations  Auto generated by spf13/cobra on 26-Aug-2019 </description>
    </item>
    
    <item>
      <title>dkron raft remove-peer</title>
      <link>/2.0/pro/cli/dkron_raft_remove-peer/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2.0/pro/cli/dkron_raft_remove-peer/</guid>
      <description>dkron raft remove-peer Command to list raft peers
Synopsis Command to list raft peers
dkron raft remove-peer [flags] Options  -h, --help help for remove-peer --peer-id string Remove a Dkron server with the given ID from the Raft configuration. Options inherited from parent commands  --cert-file string Path to the client server TLS cert file --config string config file (default is /etc/dkron/dkron.yml) --key-file string Path to the client server TLS key file --rpc-addr string gRPC address of the agent (default &amp;quot;127.</description>
    </item>
    
    <item>
      <title>dkron version</title>
      <link>/2.0/pro/cli/dkron_version/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2.0/pro/cli/dkron_version/</guid>
      <description>dkron version Show version
Synopsis Show the version
dkron version [flags] Options  -h, --help help for version Options inherited from parent commands  --config string config file (default is /etc/dkron/dkron.yml) SEE ALSO  dkron	- Professional distributed job scheduling system  Auto generated by spf13/cobra on 26-Aug-2019 </description>
    </item>
    
    <item>
      <title>dkron</title>
      <link>/v1.2/cli/dkron/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/cli/dkron/</guid>
      <description>dkron Open source distributed job scheduling system
Synopsis Dkron is a system service that runs scheduled jobs at given intervals or times, just like the cron unix service but distributed in several machines in a cluster. If a machine fails (the leader), a follower will take over and keep running the scheduled jobs without human intervention.
Options  --config string config file path -h, --help help for dkron SEE ALSO  dkron agent	- Start a dkron agent dkron doc	- Generate Markdown documentation for the Dkron CLI.</description>
    </item>
    
    <item>
      <title>dkron agent</title>
      <link>/v1.2/cli/dkron_agent/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/cli/dkron_agent/</guid>
      <description>dkron agent Start a dkron agent
Synopsis Start a dkron agent that schedule jobs, listen for executions and run executors. It also runs a web UI.
dkron agent [flags] Options  --advertise-addr string Address used to advertise to other nodes in the cluster. By default, the bind address is advertised --advertise-rpc-port int Use the value of rpc-port by default --backend string Store backend (etcd|etcdv3|consul|zk|redis|boltdb|dynamodb) (default &amp;quot;boltdb&amp;quot;) --backend-machine strings Store backend machines addresses (default [.</description>
    </item>
    
    <item>
      <title>dkron doc</title>
      <link>/v1.2/cli/dkron_doc/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/cli/dkron_doc/</guid>
      <description>dkron doc Generate Markdown documentation for the Dkron CLI.
Synopsis Generate Markdown documentation for the Dkron CLI. This command is, mostly, used to create up-to-date documentation of Dkron&amp;rsquo;s command-line interface for http://dkron.io/. It creates one Markdown file per command with front matter suitable for rendering in Hugo.
dkron doc [flags] Options  --dir string the directory to write the doc. (default &amp;quot;/tmp/dkrondoc/&amp;quot;) -h, --help help for doc Options inherited from parent commands  --config string config file path SEE ALSO  dkron	- Open source distributed job scheduling system  Auto generated by spf13/cobra on 22-Mar-2019 </description>
    </item>
    
    <item>
      <title>dkron keygen</title>
      <link>/v1.2/cli/dkron_keygen/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/cli/dkron_keygen/</guid>
      <description>dkron keygen Generates a new encryption key
Synopsis Generates a new encryption key that can be used to configure the agent to encrypt traffic. The output of this command is already in the proper format that the agent expects.
dkron keygen [flags] Options  -h, --help help for keygen Options inherited from parent commands  --config string config file path SEE ALSO  dkron	- Open source distributed job scheduling system  Auto generated by spf13/cobra on 22-Mar-2019 </description>
    </item>
    
    <item>
      <title>dkron leave</title>
      <link>/v1.2/cli/dkron_leave/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/cli/dkron_leave/</guid>
      <description>dkron leave Force an agent to leave the cluster
Synopsis Stop stops an agent, if the agent is a server and is running for election stop running for election, if this server was the leader this will force the cluster to elect a new leader and start a new scheduler. If this is a server and has the scheduler started stop it, ignoring if this server was participating in leader election or not (local storage).</description>
    </item>
    
    <item>
      <title>dkron version</title>
      <link>/v1.2/cli/dkron_version/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/cli/dkron_version/</guid>
      <description>dkron version Show version
Synopsis Show the version
dkron version [flags] Options  -h, --help help for version Options inherited from parent commands  --config string config file path SEE ALSO  dkron	- Open source distributed job scheduling system  Auto generated by spf13/cobra on 22-Mar-2019 </description>
    </item>
    
    <item>
      <title>dkron</title>
      <link>/v1.2/cli/dkron/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/cli/dkron/</guid>
      <description>dkron Professional distributed job scheduling system
Synopsis Dkron is a system service that runs scheduled jobs at given intervals or times, just like the cron unix service but distributed in several machines in a cluster. If a machine fails (the leader), a follower will take over and keep running the scheduled jobs without human intervention.
Options  --config string config file (default is /etc/dkron/dkron.yml) -h, --help help for dkron SEE ALSO  dkron agent	- Start a dkron agent dkron doc	- Generate Markdown documentation for the Dkron CLI.</description>
    </item>
    
    <item>
      <title>dkron agent</title>
      <link>/v1.2/cli/dkron_agent/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/cli/dkron_agent/</guid>
      <description>dkron agent Start a dkron agent
Synopsis Start a dkron agent that schedule jobs, listen for executions and run executors. It also runs a web UI.
dkron agent [flags] Options  --advertise-addr string Address used to advertise to other nodes in the cluster. By default, the bind address is advertised. --advertise-rpc-port int Use the value of rpc-port by default. --auto-tls Client TLS using generated certificates (default true) --backend string store backend (default &amp;quot;boltdb&amp;quot;) --backend-machine strings store backend machines addresses (default [.</description>
    </item>
    
    <item>
      <title>dkron doc</title>
      <link>/v1.2/cli/dkron_doc/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/cli/dkron_doc/</guid>
      <description>dkron doc Generate Markdown documentation for the Dkron CLI.
Synopsis Generate Markdown documentation for the Dkron CLI. This command is, mostly, used to create up-to-date documentation of Dkron&amp;rsquo;s command-line interface for http://dkron.io/. It creates one Markdown file per command with front matter suitable for rendering in Hugo.
dkron doc [flags] Options  --dir string the directory to write the doc. (default &amp;quot;/tmp/dkrondoc/&amp;quot;) -h, --help help for doc Options inherited from parent commands  --config string config file (default is /etc/dkron/dkron.</description>
    </item>
    
    <item>
      <title>dkron keygen</title>
      <link>/v1.2/cli/dkron_keygen/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/cli/dkron_keygen/</guid>
      <description>dkron keygen Generates a new encryption key
Synopsis Generates a new encryption key that can be used to configure the agent to encrypt traffic. The output of this command is already in the proper format that the agent expects.
dkron keygen [flags] Options  -h, --help help for keygen Options inherited from parent commands  --config string config file (default is /etc/dkron/dkron.yml) SEE ALSO  dkron	- Professional distributed job scheduling system  Auto generated by spf13/cobra on 21-Jan-2019 </description>
    </item>
    
    <item>
      <title>dkron version</title>
      <link>/v1.2/cli/dkron_version/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/cli/dkron_version/</guid>
      <description>dkron version Show version
Synopsis Show the version
dkron version [flags] Options  -h, --help help for version Options inherited from parent commands  --config string config file (default is /etc/dkron/dkron.yml) SEE ALSO  dkron	- Professional distributed job scheduling system  Auto generated by spf13/cobra on 21-Jan-2019 </description>
    </item>
    
    <item>
      <title>header</title>
      <link>/_header/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>/_header/</guid>
      <description>  </description>
    </item>
    
    <item>
      <title></title>
      <link>/_footer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/_footer/</guid>
      <description>Distributed Works © 2015 - 2020 Victor Castell - victor@distrib.works</description>
    </item>
    
    <item>
      <title></title>
      <link>/v1.2/_footer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/_footer/</guid>
      <description>Distributed Works © 2015 - 2019 Victor Castell - victor@distrib.works</description>
    </item>
    
    <item>
      <title></title>
      <link>/v2.0/_footer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/_footer/</guid>
      <description>Distributed Works © 2015 - 2020 Victor Castell - victor@distrib.works</description>
    </item>
    
    <item>
      <title>Access Control</title>
      <link>/pro/acls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pro/acls/</guid>
      <description>Access Control (Preview) This feature is in preview and is subject to big changes
 Dkron provides an optional Access Control List (ACL) system which can be used to control access to data and APIs. The ACL is Capability-based, relying on policies to determine which fine grained rules can be applied. Dkron&amp;rsquo;s capability based ACL system is very similar to common ACL systems you are used to.
ACL System Overview Dkron&amp;rsquo;s ACL system is implemented with the CNCF Open Policy Agent bringing a powerful system to suit your needs.</description>
    </item>
    
    <item>
      <title>Access Control</title>
      <link>/v2.0/pro/acls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/pro/acls/</guid>
      <description>Access Control (Preview) This feature is in preview and is subject to big changes
 Dkron provides an optional Access Control List (ACL) system which can be used to control access to data and APIs. The ACL is Capability-based, relying on policies to determine which fine grained rules can be applied. Dkron&amp;rsquo;s capability based ACL system is very similar to common ACL systems you are used to.
ACL System Overview Dkron&amp;rsquo;s ACL system is implemented with the CNCF Open Policy Agent bringing a powerful system to suit your needs.</description>
    </item>
    
    <item>
      <title>Authentication</title>
      <link>/pro/auth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pro/auth/</guid>
      <description>Dkron Pro has the ability to be configured to use HTTP basic auth.
Authentication can be set using these parameters in the dkron config file:
# dkron.yml username: dkron_admin password: adminpassword This will enable auth on the WebUI and for the API.</description>
    </item>
    
    <item>
      <title>Authentication</title>
      <link>/v2.0/pro/auth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/pro/auth/</guid>
      <description>Dkron Pro has the ability to be configured to use HTTP basic auth.
Authentication can be set using these parameters in the dkron config file:
# dkron.yml username: dkron_admin password: adminpassword This will enable auth on the WebUI and for the API.</description>
    </item>
    
    <item>
      <title>Authorization</title>
      <link>/v1.2/pro/auth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/auth/</guid>
      <description>Dkron Pro has the ability to be configured to use HTTP basic auth.
Authentication can be set using these parameters in the dkron config file:
# dkron.yml username: dkron_admin password: adminpassword This will enable auth on the WebUI and for the API.</description>
    </item>
    
    <item>
      <title>AWS ECS Executor</title>
      <link>/pro/executors/ecs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pro/executors/ecs/</guid>
      <description>The ECS exeutor is capable of launching tasks in ECS clusters, then listen to a stream of CloudWatch Logs and return the output.
To configure a job to be run in ECS, the executor needs a JSON Task definition template or an already defined task in ECS.
To allow the ECS Task runner to run tasks, the machine running Dkron needs to have the appropriate permissions configured in AWS IAM:</description>
    </item>
    
    <item>
      <title>AWS ECS Executor</title>
      <link>/v1.2/pro/executors/ecs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/executors/ecs/</guid>
      <description>The ECS exeutor is capable of launching tasks in ECS clusters, then listen to a stream of CloudWatch Logs and return the output.
To configure a job to be run in ECS, the executor needs a JSON Task definition template or an already defined task in ECS.
To allow the ECS Task runner to run tasks, the machine running Dkron needs to have the appropriate permissions configured in AWS IAM:</description>
    </item>
    
    <item>
      <title>AWS ECS Executor</title>
      <link>/v2.0/pro/executors/ecs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/pro/executors/ecs/</guid>
      <description>The ECS exeutor is capable of launching tasks in ECS clusters, then listen to a stream of CloudWatch Logs and return the output.
To configure a job to be run in ECS, the executor needs a JSON Task definition template or an already defined task in ECS.
To allow the ECS Task runner to run tasks, the machine running Dkron needs to have the appropriate permissions configured in AWS IAM:</description>
    </item>
    
    <item>
      <title>Cloud Auto-join</title>
      <link>/usage/cloud-auto-join/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/cloud-auto-join/</guid>
      <description>Cloud Auto-joining As of Dkron 2.0.0, retry-join accepts a unified interface using the go-discover library for doing automatic cluster joining using cloud metadata. To use retry-join with a supported cloud provider, specify the configuration on the command line or configuration file as a key=value key=value ... string.
If the values contain spaces, equals, backslashes or double quotes then they need to be double quoted and the usual escaping rules apply.</description>
    </item>
    
    <item>
      <title>Cloud Auto-join</title>
      <link>/v2.0/usage/cloud-auto-join/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/cloud-auto-join/</guid>
      <description>Cloud Auto-joining As of Dkron 2.0.0, retry-join accepts a unified interface using the go-discover library for doing automatic cluster joining using cloud metadata. To use retry-join with a supported cloud provider, specify the configuration on the command line or configuration file as a key=value key=value ... string.
If the values contain spaces, equals, backslashes or double quotes then they need to be double quoted and the usual escaping rules apply.</description>
    </item>
    
    <item>
      <title>Clustering</title>
      <link>/usage/clustering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/clustering/</guid>
      <description>Configure a cluster Dkron can run in HA mode, avoiding SPOFs, this mode provides better scalability and better reliability for users that wants a high level of confidence in the cron jobs they need to run.
Manually bootstrapping a Dkron cluster does not rely on additional tooling, but does require operator participation in the cluster formation process. When bootstrapping, Dkron servers and clients must be started and informed with the address of at least one Dkron server.</description>
    </item>
    
    <item>
      <title>Clustering</title>
      <link>/v1.2/pro/clustering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/clustering/</guid>
      <description>Configure a cluster First follow the Dkron clustering guide then you can continue with this guide.
The embedded store also needs to know its peers, it needs its own configuration as in the following example:
# etcd.conf.yaml # Initial cluster configuration for bootstrapping. initial-cluster: dkron1=https://10.19.3.9:2380,dkron2=https://10.19.4.64:2380,dkron3=https://10.19.7.215:2380 With this configuration Dkron Pro should start in cluster mode with embedded storage.
For a more in detail guide of clustering with etcd follow this guide: https://github.</description>
    </item>
    
    <item>
      <title>Clustering</title>
      <link>/v1.2/usage/clustering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/usage/clustering/</guid>
      <description>Configure a cluster Dkron can run in HA mode, avoiding SPOFs, this mode provides better scalability and better reliability for users that wants a high level of confidence in the cron jobs they need to run.
To form a cluster, server nodes need to know the address of its peers as in the following example:
# dkron.yml join: - 10.19.3.9 - 10.19.4.64 - 10.19.7.215 Etcd For a more in detail guide of clustering with etcd follow this guide: https://github.</description>
    </item>
    
    <item>
      <title>Clustering</title>
      <link>/v2.0/usage/clustering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/clustering/</guid>
      <description>Configure a cluster Dkron can run in HA mode, avoiding SPOFs, this mode provides better scalability and better reliability for users that wants a high level of confidence in the cron jobs they need to run.
Manually bootstrapping a Dkron cluster does not rely on additional tooling, but does require operator participation in the cluster formation process. When bootstrapping, Dkron servers and clients must be started and informed with the address of at least one Dkron server.</description>
    </item>
    
    <item>
      <title>Commercial FAQ</title>
      <link>/pro/commercial-faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pro/commercial-faq/</guid>
      <description>What is Dkron Pro? Dkron Pro is a flavor of Dkron which add more functionality and provide additional support options for customers.
Is there a trial version? There&amp;rsquo;s no free trial but we do offer a 14 day period with full refund if it does not work for you.
Can I get a discount? I&amp;rsquo;m sure you&amp;rsquo;re very nice but no. Everyone pays the same price.
What is the license? See COMM-LICENSE.</description>
    </item>
    
    <item>
      <title>Commercial FAQ</title>
      <link>/v1.2/pro/commercial-faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/commercial-faq/</guid>
      <description>What is Dkron Pro? Dkron Pro is a flavor of Dkron which add more functionality and provide additional support options for customers.
Is there a trial version? There&amp;rsquo;s no free trial but we do offer a 14 day period with full refund if it does not work for you.
Can I get a discount? I&amp;rsquo;m sure you&amp;rsquo;re very nice but no. Everyone pays the same price.
What is the license? See COMM-LICENSE.</description>
    </item>
    
    <item>
      <title>Commercial FAQ</title>
      <link>/v2.0/pro/commercial-faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/pro/commercial-faq/</guid>
      <description>What is Dkron Pro? Dkron Pro is a flavor of Dkron which add more functionality and provide additional support options for customers.
Is there a trial version? There&amp;rsquo;s no free trial but we do offer a 14 day period with full refund if it does not work for you.
Can I get a discount? I&amp;rsquo;m sure you&amp;rsquo;re very nice but no. Everyone pays the same price.
What is the license? See COMM-LICENSE.</description>
    </item>
    
    <item>
      <title>Commercial Support</title>
      <link>/pro/commercial-support/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pro/commercial-support/</guid>
      <description>Dkron offers only community support. Dkro Pro offers priority support via email.
Priority Support Covers 1 incident per quarter, with a max response time of 2 working days. Scope is limited to Dkron and Dkron Pro features and APIs, not application integration or infrastructure. For support, email support AT distrib.works. Please email using the same domain as the original license email or explain your connection to the licensed company.</description>
    </item>
    
    <item>
      <title>Commercial Support</title>
      <link>/v1.2/pro/commercial-support/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/commercial-support/</guid>
      <description>Dkron offers only community support. Dkro Pro offers priority support via email.
Priority Support Covers 1 incident per quarter, with a max response time of 2 working days. Scope is limited to Dkron and Dkron Pro features and APIs, not the application or infrastructure. For support, email support AT distrib.works. Please email using the same domain as the original license email or explain your connection to the licensed company.</description>
    </item>
    
    <item>
      <title>Commercial Support</title>
      <link>/v2.0/pro/commercial-support/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/pro/commercial-support/</guid>
      <description>Dkron offers only community support. Dkro Pro offers priority support via email.
Priority Support Covers 1 incident per quarter, with a max response time of 2 working days. Scope is limited to Dkron and Dkron Pro features and APIs, not application integration or infrastructure. For support, email support AT distrib.works. Please email using the same domain as the original license email or explain your connection to the licensed company.</description>
    </item>
    
    <item>
      <title>Concurrency</title>
      <link>/usage/concurrency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/concurrency/</guid>
      <description>Concurrency Jobs can be configured to allow overlapping executions or forbid them.
Concurrency property accepts two option:
 allow (default): Allow concurrent job executions. forbid: If the job is already running don&amp;rsquo;t send the execution, it will skip the executions until the next schedule.  Example:
{ &amp;#34;name&amp;#34;: &amp;#34;job1&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 10s&amp;#34;, &amp;#34;executor&amp;#34;: &amp;#34;shell&amp;#34;, &amp;#34;executor_config&amp;#34;: { &amp;#34;command&amp;#34;: &amp;#34;echo \&amp;#34;Hello from parent\&amp;#34;&amp;#34; }, &amp;#34;concurrency&amp;#34;: &amp;#34;forbid&amp;#34; } </description>
    </item>
    
    <item>
      <title>Concurrency</title>
      <link>/v1.2/usage/concurrency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/usage/concurrency/</guid>
      <description>Concurrency Jobs can be configured to allow overlapping executions or forbid them.
Concurrency property accepts two option:
 allow (default): Allow concurrent job executions. forbid: If the job is already running don&amp;rsquo;t send the execution, it will skip the executions until the next schedule.  Example:
{ &amp;#34;name&amp;#34;: &amp;#34;job1&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 10s&amp;#34;, &amp;#34;executor&amp;#34;: &amp;#34;shell&amp;#34;, &amp;#34;executor_config&amp;#34;: { &amp;#34;command&amp;#34;: &amp;#34;echo \&amp;#34;Hello from parent\&amp;#34;&amp;#34; }, &amp;#34;concurrency&amp;#34;: &amp;#34;forbid&amp;#34; } </description>
    </item>
    
    <item>
      <title>Concurrency</title>
      <link>/v2.0/usage/concurrency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/concurrency/</guid>
      <description>Concurrency Jobs can be configured to allow overlapping executions or forbid them.
Concurrency property accepts two option:
 allow (default): Allow concurrent job executions. forbid: If the job is already running don&amp;rsquo;t send the execution, it will skip the executions until the next schedule.  Example:
{ &amp;#34;name&amp;#34;: &amp;#34;job1&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 10s&amp;#34;, &amp;#34;executor&amp;#34;: &amp;#34;shell&amp;#34;, &amp;#34;executor_config&amp;#34;: { &amp;#34;command&amp;#34;: &amp;#34;echo \&amp;#34;Hello from parent\&amp;#34;&amp;#34; }, &amp;#34;concurrency&amp;#34;: &amp;#34;forbid&amp;#34; } </description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>/basics/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/basics/configuration/</guid>
      <description>Configuration sources Settings can be specified in three ways (in order of precedence):
 Command line arguments. Environment variables starting with DKRON_ dkron.yml config file  Config file location Config file will be loaded from the following paths:
 /etc/dkron $HOME/.dkron ./config  Config file example # Dkron example configuration file # server: false # bootstrap-expect: 3 # data-dir: dkron.data # log-level: debug # tags: # dc: east # encrypt: a-valid-key-generated-with-dkron-keygen # retry-join: # - 10.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>/pro/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pro/configuration/</guid>
      <description>Configuration Dkron Pro uses the same parameters as Dkron OSS and add some extra parameters.
Command line options  --username - Authentication username --password - Authentication password --cert-file - Path to the client server TLS cert file --key-file - Path to the client server TLS key file --client-crl-file - Path to the client certificate revocation list file --trusted-ca-file - Path to the client server TLS trusted CA cert file --client-cert-auth - Enable client cert authentication --auto-tls - Client TLS using generated certificates  </description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>/v1.2/basics/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/basics/configuration/</guid>
      <description>Configuration sources Settings can be specified in three ways (in order of precedence):
 Command line arguments. Environment variables starting with DKRON_ dkron.json config file  Config file example # Dkron example configuration file # backend: etcd # backend-machine: 127.0.0.1:2379 # server: false # log-level: debug # tags: # role: web # datacenter: east # keyspace: dkron # encrypt: a-valid-key-generated-with-dkron-keygen # join: # - 10.0.0.1 # - 10.0.0.2 # - 10.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>/v1.2/pro/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/configuration/</guid>
      <description>Configuration Dkron Pro uses the same parameters as Dkron OSS and add some extra parameters.
Command line options  --etcd-config-file-path - Etcd node config --username - Authentication username --password - Authentication password --cert-file - Path to the client server TLS cert file --key-file - Path to the client server TLS key file --client-crl-file - Path to the client certificate revocation list file --trusted-ca-file - Path to the client server TLS trusted CA cert file --client-cert-auth - Enable client cert authentication --auto-tls - Client TLS using generated certificates  </description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>/v2.0/basics/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/basics/configuration/</guid>
      <description>Configuration sources Settings can be specified in three ways (in order of precedence):
 Command line arguments. Environment variables starting with DKRON_ dkron.yml config file  Config file location Config file will be loaded from the following paths:
 /etc/dkron $HOME/.dkron ./config  Config file example # Dkron example configuration file # server: false # bootstrap-expect: 3 # data-dir: dkron.data # log-level: debug # tags: # dc: east # encrypt: a-valid-key-generated-with-dkron-keygen # retry-join: # - 10.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>/v2.0/pro/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/pro/configuration/</guid>
      <description>Configuration Dkron Pro uses the same parameters as Dkron OSS and add some extra parameters.
Command line options  --username - Authentication username --password - Authentication password --cert-file - Path to the client server TLS cert file --key-file - Path to the client server TLS key file --client-crl-file - Path to the client certificate revocation list file --trusted-ca-file - Path to the client server TLS trusted CA cert file --client-cert-auth - Enable client cert authentication --auto-tls - Client TLS using generated certificates  </description>
    </item>
    
    <item>
      <title>Cross region failover</title>
      <link>/pro/failover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pro/failover/</guid>
      <description>Dkron Pro can run federated in failover mode, this allows to have two clusters running in different regions and configure one of the clusters in an active-passive fashion, doing a failover in case the active cluster dies.
This feature is experimental and should be handled with care.
 </description>
    </item>
    
    <item>
      <title>Cross region failover</title>
      <link>/v2.0/pro/failover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/pro/failover/</guid>
      <description>Dkron Pro can run federated in failover mode, this allows to have two clusters running in different regions and configure one of the clusters in an active-passive fashion, doing a failover in case the active cluster dies.
This feature is experimental and should be handled with care.
 </description>
    </item>
    
    <item>
      <title>Dkron Pro</title>
      <link>/products/pro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/products/pro/</guid>
      <description>Dkron Pro Improved security, features and reliability for your scheduled jobs  Buy      Get additional features and commercial support from the creator of Dkron
 Key features Security  Pro has enhanced security using industry standard SSL encryption for communication between all components of the application, the embedded storage engine and nodes.
You can also enable basic authentication to restrict access to the WebUI and the API.</description>
    </item>
    
    <item>
      <title>Dkron Pro</title>
      <link>/v2.0/products/pro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/products/pro/</guid>
      <description>Dkron Pro Improved security, features and reliability for your scheduled jobs  Buy      Get additional features and commercial support from the creator of Dkron
 Key features Security  Pro has enhanced security using industry standard SSL encryption for communication between all components of the application, the embedded storage engine and nodes.
You can also enable basic authentication to restrict access to the WebUI and the API.</description>
    </item>
    
    <item>
      <title>Dkron vs. Other Software</title>
      <link>/intro/dkron_vs_other_software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/intro/dkron_vs_other_software/</guid>
      <description>Dkron vs. Chronos Airbnb&amp;rsquo;s Chronos is a job scheduler that is similar to dkron, it&amp;rsquo;s distributed and fault tolerant thanks to the use of Zookeeper and Apache Mesos.
If you don&amp;rsquo;t have/want to run a Mesos cluster and deal with the not easy configuration and maintenance of Zookeeper and you want something lighter, Dkron could help you.
Dkron vs. Rundeck Rundeck is a popular and mature platform to automate operations and schedule jobs.</description>
    </item>
    
    <item>
      <title>Dkron vs. Other Software</title>
      <link>/v1.2/intro/dkron_vs_other_software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/intro/dkron_vs_other_software/</guid>
      <description>Dkron vs. Chronos Airbnb&amp;rsquo;s Chronos is a job scheduler that is similar to dkron, it&amp;rsquo;s distributed and fault tolerant thanks to the use of Zookeeper and Apache Mesos.
If you don&amp;rsquo;t have/want to run a Mesos cluster and deal with the not easy configuration and maintenance of Zookeeper and you want something lighter, Dkron could help you.
Dkron vs. Rundeck Rundeck is a popular and mature platform to automate operations and schedule jobs.</description>
    </item>
    
    <item>
      <title>Dkron vs. Other Software</title>
      <link>/v2.0/intro/dkron_vs_other_software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/intro/dkron_vs_other_software/</guid>
      <description>Dkron vs. Chronos Airbnb&amp;rsquo;s Chronos is a job scheduler that is similar to dkron, it&amp;rsquo;s distributed and fault tolerant thanks to the use of Zookeeper and Apache Mesos.
If you don&amp;rsquo;t have/want to run a Mesos cluster and deal with the not easy configuration and maintenance of Zookeeper and you want something lighter, Dkron could help you.
Dkron vs. Rundeck Rundeck is a popular and mature platform to automate operations and schedule jobs.</description>
    </item>
    
    <item>
      <title>Docker executor</title>
      <link>/pro/executors/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pro/executors/docker/</guid>
      <description>Docker executor can launch docker based cron jobs using the docker command of the target node.
This executor needs a recent version of docker to be available and configured in the target node.
Configuration To run a docker job create a job config with the docker executor as in this example:
{ &amp;#34;executor&amp;#34;: &amp;#34;docker&amp;#34;, &amp;#34;executor_config&amp;#34;: { &amp;#34;image&amp;#34;: &amp;#34;alpine&amp;#34;, //docker image to use &amp;#34;volumes&amp;#34;: &amp;#34;/logs:/var/log/&amp;#34;, //comma separated list of volume mappings &amp;#34;command&amp;#34;: &amp;#34;echo \&amp;#34;Hello from dkron\&amp;#34;&amp;#34;, //command to pass to run on container &amp;#34;env&amp;#34;: &amp;#34;ENVIRONMENT=variable&amp;#34; //environment variables to pass to the container } } </description>
    </item>
    
    <item>
      <title>Docker executor</title>
      <link>/v1.2/pro/executors/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/executors/docker/</guid>
      <description>Docker executor can launch docker based cron jobs using the docker command of the target node.
This executor needs a recent version of docker to be available and configured in the target node.
Configuration To run a docker job create a job config with the docker executor as in this example:
{ &amp;#34;executor&amp;#34;: &amp;#34;docker&amp;#34;, &amp;#34;executor_config&amp;#34;: { &amp;#34;image&amp;#34;: &amp;#34;alpine&amp;#34;, //docker image to use &amp;#34;volumes&amp;#34;: &amp;#34;/logs:/var/log/&amp;#34;, //comma separated list of volume mappings &amp;#34;command&amp;#34;: &amp;#34;echo \&amp;#34;Hello from dkron\&amp;#34;&amp;#34;, //command to pass to run on container &amp;#34;env&amp;#34;: &amp;#34;ENVIRONMENT=variable&amp;#34; //environment variables to pass to the container } } </description>
    </item>
    
    <item>
      <title>Docker executor</title>
      <link>/v2.0/pro/executors/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/pro/executors/docker/</guid>
      <description>Docker executor can launch docker based cron jobs using the docker command of the target node.
This executor needs a recent version of docker to be available and configured in the target node.
Configuration To run a docker job create a job config with the docker executor as in this example:
{ &amp;#34;executor&amp;#34;: &amp;#34;docker&amp;#34;, &amp;#34;executor_config&amp;#34;: { &amp;#34;image&amp;#34;: &amp;#34;alpine&amp;#34;, //docker image to use &amp;#34;volumes&amp;#34;: &amp;#34;/logs:/var/log/&amp;#34;, //comma separated list of volume mappings &amp;#34;command&amp;#34;: &amp;#34;echo \&amp;#34;Hello from dkron\&amp;#34;&amp;#34;, //command to pass to run on container &amp;#34;env&amp;#34;: &amp;#34;ENVIRONMENT=variable&amp;#34; //environment variables to pass to the container } } </description>
    </item>
    
    <item>
      <title>Elasticsearch processor</title>
      <link>/pro/processors/elasticsearch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pro/processors/elasticsearch/</guid>
      <description>The Elasticsearch processor can fordward execution logs to an ES cluster. It need an already available Elasticsearch installation that is visible in the same network of the target node.
The output logs of the job execution will be stored in the indicated ES instace.
Configuration { &amp;#34;processors&amp;#34;: { &amp;#34;elasticsearch&amp;#34;: { &amp;#34;url&amp;#34;: &amp;#34;http://localhost:9200&amp;#34;, //comma separated list of Elasticsearch hosts urls (default: http://localhost:9200) &amp;#34;index&amp;#34;: &amp;#34;dkron_logs&amp;#34;, //desired index name (default: dkron_logs) &amp;#34;forward&amp;#34;: &amp;#34;false&amp;#34; //forward logs to the next processor (default: false) } } } </description>
    </item>
    
    <item>
      <title>Elasticsearch processor</title>
      <link>/v1.2/pro/processors/elasticsearch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/processors/elasticsearch/</guid>
      <description>The Elasticsearch processor can fordward execution logs to an ES cluster. It need an already available Elasticsearch installation that is visible in the same network of the target node.
The output logs of the job execution will be stored in the indicated ES instace.
Configuration { &amp;#34;processors&amp;#34;: { &amp;#34;elasticsearch&amp;#34;: { &amp;#34;url&amp;#34;: &amp;#34;http://localhost:9200&amp;#34;, //comma separated list of Elasticsearch hosts urls (default: http://localhost:9200) &amp;#34;index&amp;#34;: &amp;#34;dkron_logs&amp;#34;, //desired index name (default: dkron_logs) &amp;#34;forward&amp;#34;: &amp;#34;false&amp;#34; //forward logs to the next processor (default: false) } } } </description>
    </item>
    
    <item>
      <title>Elasticsearch processor</title>
      <link>/v2.0/pro/processors/elasticsearch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/pro/processors/elasticsearch/</guid>
      <description>The Elasticsearch processor can fordward execution logs to an ES cluster. It need an already available Elasticsearch installation that is visible in the same network of the target node.
The output logs of the job execution will be stored in the indicated ES instace.
Configuration { &amp;#34;processors&amp;#34;: { &amp;#34;elasticsearch&amp;#34;: { &amp;#34;url&amp;#34;: &amp;#34;http://localhost:9200&amp;#34;, //comma separated list of Elasticsearch hosts urls (default: http://localhost:9200) &amp;#34;index&amp;#34;: &amp;#34;dkron_logs&amp;#34;, //desired index name (default: dkron_logs) &amp;#34;forward&amp;#34;: &amp;#34;false&amp;#34; //forward logs to the next processor (default: false) } } } </description>
    </item>
    
    <item>
      <title>Email processor</title>
      <link>/pro/processors/email/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pro/processors/email/</guid>
      <description>The Email processor provides flexibility to job email notifications.
Configuration of the email processor is stored in a file named dkron-processor-email.yml in the same locations as dkron.yml, and should include a list of providers, it can include any number of providers.
Example:
provider1: host: smtp.myprovider.com port: 25 username: myusername password: mypassword from: cron@mycompany.com subjectPrefix: &amp;#39;[Staging] &amp;#39;  host and port are the minimum required parameters for provider config, and also emails for the job configuration.</description>
    </item>
    
    <item>
      <title>Email processor</title>
      <link>/v1.2/pro/processors/email/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/processors/email/</guid>
      <description>The Email processor provides flexibility to job email notifications.
Configuration of the email processor is stored in a file named dkron-processor-email.yml in the same locations as dkron.yml, and should include a list of providers, it can include any number of providers.
Example:
provider1: host: smtp.myprovider.com port: 25 username: myusername password: mypassword from: cron@mycompany.com subjectPrefix: &amp;#39;[Staging] &amp;#39; Then configure each job with the following options:
Example:
{ &amp;#34;processors&amp;#34;: { &amp;#34;email&amp;#34;: { &amp;#34;provider&amp;#34;: &amp;#34;provider1&amp;#34;, &amp;#34;emails&amp;#34;: &amp;#34;team@mycompany.</description>
    </item>
    
    <item>
      <title>Email processor</title>
      <link>/v2.0/pro/processors/email/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/pro/processors/email/</guid>
      <description>The Email processor provides flexibility to job email notifications.
Configuration of the email processor is stored in a file named dkron-processor-email.yml in the same locations as dkron.yml, and should include a list of providers, it can include any number of providers.
Example:
provider1: host: smtp.myprovider.com port: 25 username: myusername password: mypassword from: cron@mycompany.com subjectPrefix: &amp;#39;[Staging] &amp;#39; Then configure each job with the following options:
Example:
{ &amp;#34;processors&amp;#34;: { &amp;#34;email&amp;#34;: { &amp;#34;provider&amp;#34;: &amp;#34;provider1&amp;#34;, &amp;#34;emails&amp;#34;: &amp;#34;team@mycompany.</description>
    </item>
    
    <item>
      <title>Embedded storage</title>
      <link>/usage/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/storage/</guid>
      <description>Dkron has an embedded distributed KV store engine based on BuntDB. This works out of the box on each dkron server.
This ensures a dead easy install and setup, basically run dkron and you will have a full working node.</description>
    </item>
    
    <item>
      <title>Embedded storage</title>
      <link>/v1.2/pro/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/storage/</guid>
      <description>Dkron Pro has an embedded distributed KV store engine based on etcd. This works out of the box on each node dkron server is started.
This ensures a dead easy install and setup, basically run dkron and you will have a full working node and at the same time provides you with a fully tested well supported store for its use with dkron.</description>
    </item>
    
    <item>
      <title>Embedded storage</title>
      <link>/v2.0/usage/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/storage/</guid>
      <description>Dkron has an embedded distributed KV store engine based on BadgerDB. This works out of the box on each dkron server.
This ensures a dead easy install and setup, basically run dkron and you will have a full working node.</description>
    </item>
    
    <item>
      <title>Encryption</title>
      <link>/pro/encryption/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pro/encryption/</guid>
      <description>SSL encryption is used for communicating dkron pro nodes. Also if client auth is enabled. This means that no other software running on your local network will be able to talk to dkron servers.
This ensures that no unexpected usage of the Dkron&amp;rsquo;s store will happen, unless it is another Dkron pro instance.
SSL encryption is enabled by default in Dkron Pro and can not be disabled, you don&amp;rsquo;t need to do nothing to use it.</description>
    </item>
    
    <item>
      <title>Encryption</title>
      <link>/v1.2/pro/encryption/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/encryption/</guid>
      <description>SSL encryption is used for communicating dkron pro and the embedded store, and between storage nodes itself. Also if client auth is enabled, only dkron pro clients can talk to the embedded store. This means that no other software running on your local network will be able to talk to dkron&amp;rsquo;s etcd server.
This ensures that no unexpected usage of the Dkron&amp;rsquo;s store will happen, unless it is another Dkron pro instance.</description>
    </item>
    
    <item>
      <title>Encryption</title>
      <link>/v2.0/pro/encryption/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/pro/encryption/</guid>
      <description>SSL encryption is used for communicating dkron pro nodes. Also if client auth is enabled. This means that no other software running on your local network will be able to talk to dkron servers.
This ensures that no unexpected usage of the Dkron&amp;rsquo;s store will happen, unless it is another Dkron pro instance.
SSL encryption is enabled by default in Dkron Pro and can not be disabled, you don&amp;rsquo;t need to do nothing to use it.</description>
    </item>
    
    <item>
      <title>File Processor</title>
      <link>/usage/processors/file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/processors/file/</guid>
      <description>File processor saves the execution output to a single log file in the specified directory
Configuration Parameters
log_dir: Path to the location where the log files will be saved forward: Forward log output to the next processor Example
{ &amp;#34;name&amp;#34;: &amp;#34;job_name&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;echo &amp;#39;Hello files&amp;#39;&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 2m&amp;#34;, &amp;#34;tags&amp;#34;: { &amp;#34;role&amp;#34;: &amp;#34;web&amp;#34; }, &amp;#34;processors&amp;#34;: { &amp;#34;files&amp;#34;: { &amp;#34;log_dir&amp;#34;: &amp;#34;/var/log/mydir&amp;#34;, &amp;#34;forward&amp;#34;: &amp;#34;true&amp;#34; } } } </description>
    </item>
    
    <item>
      <title>File Processor</title>
      <link>/v1.2/usage/processors/file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/usage/processors/file/</guid>
      <description>File processor saves the execution output to a single log file in the specified directory
Configuration Parameters
log_dir: Path to the location where the log files will be saved forward: Forward log output to the next processor Example
{ &amp;#34;name&amp;#34;: &amp;#34;job_name&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;echo &amp;#39;Hello files&amp;#39;&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 2m&amp;#34;, &amp;#34;tags&amp;#34;: { &amp;#34;role&amp;#34;: &amp;#34;web&amp;#34; }, &amp;#34;processors&amp;#34;: { &amp;#34;files&amp;#34;: { &amp;#34;log_dir&amp;#34;: &amp;#34;/var/log/mydir&amp;#34;, &amp;#34;forward&amp;#34;: true } } } </description>
    </item>
    
    <item>
      <title>File Processor</title>
      <link>/v2.0/usage/processors/file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/processors/file/</guid>
      <description>File processor saves the execution output to a single log file in the specified directory
Configuration Parameters
log_dir: Path to the location where the log files will be saved forward: Forward log output to the next processor Example
{ &amp;#34;name&amp;#34;: &amp;#34;job_name&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;echo &amp;#39;Hello files&amp;#39;&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 2m&amp;#34;, &amp;#34;tags&amp;#34;: { &amp;#34;role&amp;#34;: &amp;#34;web&amp;#34; }, &amp;#34;processors&amp;#34;: { &amp;#34;files&amp;#34;: { &amp;#34;log_dir&amp;#34;: &amp;#34;/var/log/mydir&amp;#34;, &amp;#34;forward&amp;#34;: true } } } </description>
    </item>
    
    <item>
      <title>HTTP Executor</title>
      <link>/usage/executors/http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/executors/http/</guid>
      <description>HTTP executor can send a request to an HTTP endpoint
Configuration Params:
method: Request method in uppercase url: Request url headers: Json string, such as &amp;quot;[\&amp;quot;Content-Type: application/json\&amp;quot;]&amp;quot; body: POST body timeout: Request timeout, unit seconds expectCode: Expect response code, such as 200,206 expectBody: Expect response body, support regexp, such as /success/ debug: Debug option, will log everything when this option is not empty tlsNoVerifyPeer: false (default) or true. If true, disables verification of the remote SSL certificate&#39;s validity.</description>
    </item>
    
    <item>
      <title>HTTP Executor</title>
      <link>/v1.2/usage/executors/http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/usage/executors/http/</guid>
      <description>HTTP executor can send a request to an HTTP endpoint
Configuration Params:
method: Request method in uppercase url: Request url headers: Json string, such as &amp;quot;[\&amp;quot;Content-Type: application/json\&amp;quot;]&amp;quot; body: POST body timeout: Request timeout, unit seconds expectCode: Expect response code, such as 200,206 expectBody: Expect response body, support regexp, such as /success/ debug: Debug option, will log everything when this option is not empty Example
{ &amp;#34;executor&amp;#34;: &amp;#34;http&amp;#34;, &amp;#34;executor_config&amp;#34;: { &amp;#34;method&amp;#34;: &amp;#34;GET&amp;#34;, &amp;#34;url&amp;#34;: &amp;#34;http://example.</description>
    </item>
    
    <item>
      <title>HTTP Executor</title>
      <link>/v2.0/usage/executors/http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/executors/http/</guid>
      <description>HTTP executor can send a request to an HTTP endpoint
Configuration Params:
method: Request method in uppercase url: Request url headers: Json string, such as &amp;quot;[\&amp;quot;Content-Type: application/json\&amp;quot;]&amp;quot; body: POST body timeout: Request timeout, unit seconds expectCode: Expect response code, such as 200,206 expectBody: Expect response body, support regexp, such as /success/ debug: Debug option, will log everything when this option is not empty tlsNoVerifyPeer: false (default) or true. If true, disables verification of the remote SSL certificate&#39;s validity.</description>
    </item>
    
    <item>
      <title>Internals</title>
      <link>/v1.2/usage/internals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/usage/internals/</guid>
      <description>This document is a WIP, it&amp;rsquo;s intended to describe the reasons that lead to design decisions in Dkron.
Execution results Dkron store the result of each job execution in each node.
Every time dkron executes a job it assigns it an execution group, generating a new uuid and send a serf query to target machines and waits for a response.
Each target machine that will run the job, then responds with an execution object saying it started to run the job.</description>
    </item>
    
    <item>
      <title>Job chaining</title>
      <link>/usage/chaining/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/chaining/</guid>
      <description>Job chaining You can set some jobs to run after other job is executed. To setup a job that will be executed after any other given job, just set the parent_job property when saving the new job.
The dependent job will be executed after the main job finished a successful execution.
Child jobs schedule property will be ignored if it&amp;rsquo;s present.
Take into account that parent jobs must be created before any child job.</description>
    </item>
    
    <item>
      <title>Job chaining</title>
      <link>/v1.2/usage/chaining/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/usage/chaining/</guid>
      <description>Job chaining You can set some jobs to run after other job is executed. To setup a job that will be executed after any other given job, just set the parent_job property when saving the new job.
The dependent job will be executed after the main job finished a successful execution.
Child jobs schedule property will be ignored if it&amp;rsquo;s present.
Take into account that parent jobs must be created before any child job.</description>
    </item>
    
    <item>
      <title>Job chaining</title>
      <link>/v2.0/usage/chaining/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/chaining/</guid>
      <description>Job chaining You can set some jobs to run after other job is executed. To setup a job that will be executed after any other given job, just set the parent_job property when saving the new job.
The dependent job will be executed after the main job finished a successful execution.
Child jobs schedule property will be ignored if it&amp;rsquo;s present.
Take into account that parent jobs must be created before any child job.</description>
    </item>
    
    <item>
      <title>Job metadata</title>
      <link>/usage/metatags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/metatags/</guid>
      <description>Job metadata Jobs can have an optional extra property field called metadata that allows to set arbitrary tags to jobs and query the jobs using the API:
{ &amp;#34;name&amp;#34;: &amp;#34;job_name&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;/bin/true&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 2m&amp;#34;, &amp;#34;metadata&amp;#34;: { &amp;#34;user_id&amp;#34;: &amp;#34;12345&amp;#34; } } And then query the API to get only the results needed:
$ curl http://localhost:8080/v1/jobs --data-urlencode &amp;quot;metadata[user_id]=12345&amp;quot;` </description>
    </item>
    
    <item>
      <title>Job metadata</title>
      <link>/v2.0/usage/metatags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/metatags/</guid>
      <description>Job metadata Jobs can have an optional extra property field called metadata that allows to set arbitrary tags to jobs and query the jobs using the API:
{ &amp;#34;name&amp;#34;: &amp;#34;job_name&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;/bin/true&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 2m&amp;#34;, &amp;#34;metadata&amp;#34;: { &amp;#34;user_id&amp;#34;: &amp;#34;12345&amp;#34; } } And then query the API to get only the results needed:
$ curl http://localhost:8080/v1/jobs --data-urlencode &amp;quot;metadata[user_id]=12345&amp;quot;` </description>
    </item>
    
    <item>
      <title>Job retries</title>
      <link>/usage/retries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/retries/</guid>
      <description>Jobs can be configured to retry in case of failure.
Configuration { &amp;#34;name&amp;#34;: &amp;#34;job1&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 10s&amp;#34;, &amp;#34;executor&amp;#34;: &amp;#34;shell&amp;#34;, &amp;#34;executor_config&amp;#34;: { &amp;#34;command&amp;#34;: &amp;#34;echo \&amp;#34;Hello from parent\&amp;#34;&amp;#34; }, &amp;#34;retries&amp;#34;: 5 } In case of failure to run the job in one node, it will try to run the job again in that node until the retries count reaches the limit.</description>
    </item>
    
    <item>
      <title>Job retries</title>
      <link>/v1.2/usage/retries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/usage/retries/</guid>
      <description>Jobs can be configured to retry in case of failure.
Configuration { &amp;#34;name&amp;#34;: &amp;#34;job1&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 10s&amp;#34;, &amp;#34;executor&amp;#34;: &amp;#34;shell&amp;#34;, &amp;#34;executor_config&amp;#34;: { &amp;#34;command&amp;#34;: &amp;#34;echo \&amp;#34;Hello from parent\&amp;#34;&amp;#34; }, &amp;#34;retries&amp;#34;: 5 } In case of failure to run the job in one node, it will try to run the job again in that node until the retries count reaches the limit.</description>
    </item>
    
    <item>
      <title>Job retries</title>
      <link>/v2.0/usage/retries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/retries/</guid>
      <description>Jobs can be configured to retry in case of failure.
Configuration { &amp;#34;name&amp;#34;: &amp;#34;job1&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 10s&amp;#34;, &amp;#34;executor&amp;#34;: &amp;#34;shell&amp;#34;, &amp;#34;executor_config&amp;#34;: { &amp;#34;command&amp;#34;: &amp;#34;echo \&amp;#34;Hello from parent\&amp;#34;&amp;#34; }, &amp;#34;retries&amp;#34;: 5 } In case of failure to run the job in one node, it will try to run the job again in that node until the retries count reaches the limit.</description>
    </item>
    
    <item>
      <title>License</title>
      <link>/intro/license/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/intro/license/</guid>
      <description>Copyright (c) Victor Castell
Dkron is an Open Source project licensed under the terms of the LGPLv3 license. Please see http://www.gnu.org/licenses/lgpl-3.0.html for license text.</description>
    </item>
    
    <item>
      <title>License</title>
      <link>/v1.2/intro/license/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/intro/license/</guid>
      <description>Copyright (c) Victor Castell
Dkron is an Open Source project licensed under the terms of the LGPLv3 license. Please see http://www.gnu.org/licenses/lgpl-3.0.html for license text.</description>
    </item>
    
    <item>
      <title>License</title>
      <link>/v2.0/intro/license/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/intro/license/</guid>
      <description>Copyright (c) Victor Castell
Dkron is an Open Source project licensed under the terms of the LGPLv3 license. Please see http://www.gnu.org/licenses/lgpl-3.0.html for license text.</description>
    </item>
    
    <item>
      <title>Log Processor</title>
      <link>/usage/processors/log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/processors/log/</guid>
      <description>Log processor writes the execution output to stdout/stderr
Configuration Parameters
forward: Forward the output to the next processor
Example
{ &amp;#34;name&amp;#34;: &amp;#34;job_name&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;echo &amp;#39;Hello log&amp;#39;&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 2m&amp;#34;, &amp;#34;tags&amp;#34;: { &amp;#34;role&amp;#34;: &amp;#34;web&amp;#34; }, &amp;#34;processors&amp;#34;: { &amp;#34;log&amp;#34;: { &amp;#34;forward&amp;#34;: &amp;#34;true&amp;#34; } } } </description>
    </item>
    
    <item>
      <title>Log Processor</title>
      <link>/v1.2/usage/processors/log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/usage/processors/log/</guid>
      <description>Log processor writes the execution output to stdout/stderr
Configuration Parameters
forward: Forward the output to the next processor
Example
{ &amp;#34;name&amp;#34;: &amp;#34;job_name&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;echo &amp;#39;Hello log&amp;#39;&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 2m&amp;#34;, &amp;#34;tags&amp;#34;: { &amp;#34;role&amp;#34;: &amp;#34;web&amp;#34; }, &amp;#34;processors&amp;#34;: { &amp;#34;log&amp;#34;: { &amp;#34;forward&amp;#34;: true } } } </description>
    </item>
    
    <item>
      <title>Log Processor</title>
      <link>/v2.0/usage/processors/log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/processors/log/</guid>
      <description>Log processor writes the execution output to stdout/stderr
Configuration Parameters
forward: Forward the output to the next processor
Example
{ &amp;#34;name&amp;#34;: &amp;#34;job_name&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;echo &amp;#39;Hello log&amp;#39;&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 2m&amp;#34;, &amp;#34;tags&amp;#34;: { &amp;#34;role&amp;#34;: &amp;#34;web&amp;#34; }, &amp;#34;processors&amp;#34;: { &amp;#34;log&amp;#34;: { &amp;#34;forward&amp;#34;: true } } } </description>
    </item>
    
    <item>
      <title>Metrics</title>
      <link>/usage/metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/metrics/</guid>
      <description>Dkron has the ability to send metrics to Statsd for dashboards and historical reporting or provide prometheus format metrics via the api. It sends job processing metrics, golang, and serf metrics.
Configuration Statsd Add this in your yaml config file to enable statsd metrics.
statsd-addr: &amp;#34;localhost:8125&amp;#34; # Or for datadog statsd dog-statsd-addr: &amp;#34;localhost:8125&amp;#34; Prometheus Add this to your yaml config file to enable serving prometheus metrics at the endpoint /metrics</description>
    </item>
    
    <item>
      <title>Metrics</title>
      <link>/v1.2/usage/metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/usage/metrics/</guid>
      <description>Dkron has the ability to send metrics to Statsd for dashboards and historical reporting. It sends job processing metrics and golang, serf metrics too.
Configuration Add this in your yaml config file
dog_statsd_addr: &amp;#34;localhost:8125&amp;#34; Metrics  dkron.agent.event_received.query_execution_done dkron.agent.event_received.query_run_job dkron.memberlist.gossip dkron.memberlist.probeNode dkron.memberlist.pushPullNode dkron.memberlist.tcp.accept dkron.memberlist.tcp.connect dkron.memberlist.tcp.sent dkron.memberlist.udp.received dkron.memberlist.udp.sent dkron.grpc.call_execution_done dkron.grpc.call_get_job dkron.grpc.execution_done dkron.grpc.get_job dkron.runtime.alloc_bytes dkron.runtime.free_count dkron.runtime.gc_pause_ns dkron.runtime.heap_objects dkron.runtime.malloc_count dkron.runtime.num_goroutines dkron.runtime.sys_bytes dkron.runtime.total_gc_pause_ns dkron.runtime.total_gc_runs dkron.serf.coordinate.adjustment_ms dkron.serf.msgs.received dkron.serf.msgs.sent dkron.serf.queries dkron.serf.queries.execution_done dkron.serf.queries.run_job dkron.serf.query_acks dkron.serf.query_responses dkron.serf.queue.Event dkron.serf.queue.Intent dkron.serf.queue.Query  </description>
    </item>
    
    <item>
      <title>Metrics</title>
      <link>/v2.0/usage/metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/metrics/</guid>
      <description>Dkron has the ability to send metrics to Statsd for dashboards and historical reporting. It sends job processing metrics and golang, serf metrics too.
Configuration Add this in your yaml config file
dog_statsd_addr: &amp;#34;localhost:8125&amp;#34; Metrics  dkron.agent.event_received.query_execution_done dkron.agent.event_received.query_run_job dkron.memberlist.gossip dkron.memberlist.probeNode dkron.memberlist.pushPullNode dkron.memberlist.tcp.accept dkron.memberlist.tcp.connect dkron.memberlist.tcp.sent dkron.memberlist.udp.received dkron.memberlist.udp.sent dkron.grpc.call_execution_done dkron.grpc.call_get_job dkron.grpc.execution_done dkron.grpc.get_job dkron.runtime.alloc_bytes dkron.runtime.free_count dkron.runtime.gc_pause_ns dkron.runtime.heap_objects dkron.runtime.malloc_count dkron.runtime.num_goroutines dkron.runtime.sys_bytes dkron.runtime.total_gc_pause_ns dkron.runtime.total_gc_runs dkron.serf.coordinate.adjustment_ms dkron.serf.msgs.received dkron.serf.msgs.sent dkron.serf.queries dkron.serf.queries.execution_done dkron.serf.queries.run_job dkron.serf.query_acks dkron.serf.query_responses dkron.serf.queue.Event dkron.serf.queue.Intent dkron.serf.queue.Query  </description>
    </item>
    
    <item>
      <title>Outage recovery</title>
      <link>/usage/recovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/recovery/</guid>
      <description>Outage Recovery Don&amp;rsquo;t panic! This is a critical first step.
Depending on your deployment configuration, it may take only a single server failure for cluster unavailability. Recovery requires an operator to intervene, but the process is straightforward.
This guide is for recovery from a Dkron outage due to a majority of server nodes in a datacenter being lost. If you are looking to add or remove servers, see the clustering guide.</description>
    </item>
    
    <item>
      <title>Outage recovery</title>
      <link>/v2.0/usage/recovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/recovery/</guid>
      <description>Outage Recovery Don&amp;rsquo;t panic! This is a critical first step.
Depending on your deployment configuration, it may take only a single server failure for cluster unavailability. Recovery requires an operator to intervene, but the process is straightforward.
This guide is for recovery from a Dkron outage due to a majority of server nodes in a datacenter being lost. If you are looking to add or remove servers, see the clustering guide.</description>
    </item>
    
    <item>
      <title>Shell Executor</title>
      <link>/usage/executors/shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/executors/shell/</guid>
      <description>Shell executor runs a system command
Configuration Params
shell: Run this command using a shell environment command: The command to run env: Env vars separated by comma cwd: Chdir before command run Example
{ &amp;#34;executor&amp;#34;: &amp;#34;shell&amp;#34;, &amp;#34;executor_config&amp;#34;: { &amp;#34;shell&amp;#34;: &amp;#34;true&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;my_command&amp;#34;, &amp;#34;env&amp;#34;: &amp;#34;ENV_VAR=va1,ANOTHER_ENV_VAR=var2&amp;#34;, &amp;#34;cwd&amp;#34;: &amp;#34;/app&amp;#34; } } </description>
    </item>
    
    <item>
      <title>Shell Executor</title>
      <link>/v1.2/usage/executors/shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/usage/executors/shell/</guid>
      <description>Shell executor runs a system command
Configuration Params
shell: Run this command using a shell environment command: The command to run env: Env vars separated by comma cwd: Chdir before command run Example
{ &amp;#34;executor&amp;#34;: &amp;#34;shell&amp;#34;, &amp;#34;executor_config&amp;#34;: { &amp;#34;shell&amp;#34;: &amp;#34;true&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;my_command&amp;#34;, &amp;#34;env&amp;#34;: &amp;#34;ENV_VAR=va1,ANOTHER_ENV_VAR=var2&amp;#34;, &amp;#34;cwd&amp;#34;: &amp;#34;/app&amp;#34; } } </description>
    </item>
    
    <item>
      <title>Shell Executor</title>
      <link>/v2.0/usage/executors/shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/executors/shell/</guid>
      <description>Shell executor runs a system command
Configuration Params
shell: Run this command using a shell environment command: The command to run env: Env vars separated by comma cwd: Chdir before command run Example
{ &amp;#34;executor&amp;#34;: &amp;#34;shell&amp;#34;, &amp;#34;executor_config&amp;#34;: { &amp;#34;shell&amp;#34;: &amp;#34;true&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;my_command&amp;#34;, &amp;#34;env&amp;#34;: &amp;#34;ENV_VAR=va1,ANOTHER_ENV_VAR=var2&amp;#34;, &amp;#34;cwd&amp;#34;: &amp;#34;/app&amp;#34; } } </description>
    </item>
    
    <item>
      <title>Signals</title>
      <link>/usage/signals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/signals/</guid>
      <description>Dkron responds to several signals. On a Unix machine, you can use the kill binary, e.g.
kill -TERM pid TERM TERM signals that Dkron should shut down. It will stop accepting new work, but continue working on current jobs until they finish, then will exit.
HUP HUP signals Dkron to reload the configuration without restarting, it will only affect some of the configuration values like tags, notification settings, etc. Values that needs restarting the service like IP address or ports are not affected.</description>
    </item>
    
    <item>
      <title>Slack processor</title>
      <link>/pro/processors/slack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pro/processors/slack/</guid>
      <description>The Slack processor provides slack notifications with multiple configurations and rich format.
Configuration of the slack processor is stored in a file named dkron-processor-slack.yml in the same locations as dkron.yml, and should include a list of teams, it can include any number of teams.
Example:
team1: webhook_url: https://hooks.slack.com/services/XXXXXXXXXXXXXXXXXXX bot_name: Dkron Production Then configure each job with the following options:
Example:
{ &amp;#34;processors&amp;#34;: { &amp;#34;slack&amp;#34;: { &amp;#34;team&amp;#34;: &amp;#34;team1&amp;#34;, &amp;#34;channel&amp;#34;: &amp;#34;#cron-production&amp;#34;, &amp;#34;onSuccess&amp;#34;: &amp;#34;true&amp;#34; } } } By default the slack procesor doesn&amp;rsquo;t send notifications on job success, the onSuccess parameter, enables it, like in the previous example.</description>
    </item>
    
    <item>
      <title>Slack processor</title>
      <link>/v1.2/pro/processors/slack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/pro/processors/slack/</guid>
      <description>The Slack processor provides slack notifications with multiple configurations and rich format.
Configuration of the slack processor is stored in a file named dkron-processor-slack.yml in the same locations as dkron.yml, and should include a list of teams, it can include any number of teams.
Example:
team1: webhook_url: https://hooks.slack.com/services/XXXXXXXXXXXXXXXXXXX bot_name: Dkron Production Then configure each job with the following options:
Example:
{ &amp;#34;processors&amp;#34;: { &amp;#34;slack&amp;#34;: { &amp;#34;team&amp;#34;: &amp;#34;team1&amp;#34;, &amp;#34;channel&amp;#34;: &amp;#34;#cron-production&amp;#34;, &amp;#34;onSuccess&amp;#34;: true } } } By default the slack procesor doesn&amp;rsquo;t send notifications on job success, the onSuccess parameter, enables it, like in the previous example.</description>
    </item>
    
    <item>
      <title>Slack processor</title>
      <link>/v2.0/pro/processors/slack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/pro/processors/slack/</guid>
      <description>The Slack processor provides slack notifications with multiple configurations and rich format.
Configuration of the slack processor is stored in a file named dkron-processor-slack.yml in the same locations as dkron.yml, and should include a list of teams, it can include any number of teams.
Example:
team1: webhook_url: https://hooks.slack.com/services/XXXXXXXXXXXXXXXXXXX bot_name: Dkron Production Then configure each job with the following options:
Example:
{ &amp;#34;processors&amp;#34;: { &amp;#34;slack&amp;#34;: { &amp;#34;team&amp;#34;: &amp;#34;team1&amp;#34;, &amp;#34;channel&amp;#34;: &amp;#34;#cron-production&amp;#34;, &amp;#34;onSuccess&amp;#34;: &amp;#34;true&amp;#34; } } } By default the slack procesor doesn&amp;rsquo;t send notifications on job success, the onSuccess parameter, enables it, like in the previous example.</description>
    </item>
    
    <item>
      <title>Syslog Processor</title>
      <link>/usage/processors/syslog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/processors/syslog/</guid>
      <description>Syslog processor writes the execution output to the system syslog daemon
Note: Only work on linux systems
Configuration Parameters
forward: Forward the output to the next processor
Example
{ &amp;#34;name&amp;#34;: &amp;#34;job_name&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;echo &amp;#39;Hello syslog&amp;#39;&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 2m&amp;#34;, &amp;#34;tags&amp;#34;: { &amp;#34;role&amp;#34;: &amp;#34;web&amp;#34; }, &amp;#34;processors&amp;#34;: { &amp;#34;syslog&amp;#34;: { &amp;#34;forward&amp;#34;: &amp;#34;true&amp;#34; } } } </description>
    </item>
    
    <item>
      <title>Syslog Processor</title>
      <link>/v1.2/usage/processors/syslog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/usage/processors/syslog/</guid>
      <description>Syslog processor writes the execution output to the system syslog daemon
Note: Only work on linux systems
Configuration Parameters
forward: Forward the output to the next processor
Example
{ &amp;#34;name&amp;#34;: &amp;#34;job_name&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;echo &amp;#39;Hello syslog&amp;#39;&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 2m&amp;#34;, &amp;#34;tags&amp;#34;: { &amp;#34;role&amp;#34;: &amp;#34;web&amp;#34; }, &amp;#34;processors&amp;#34;: { &amp;#34;syslog&amp;#34;: { &amp;#34;forward&amp;#34;: true } } } </description>
    </item>
    
    <item>
      <title>Syslog Processor</title>
      <link>/v2.0/usage/processors/syslog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/processors/syslog/</guid>
      <description>Syslog processor writes the execution output to the system syslog daemon
Note: Only work on linux systems
Configuration Parameters
forward: Forward the output to the next processor
Example
{ &amp;#34;name&amp;#34;: &amp;#34;job_name&amp;#34;, &amp;#34;command&amp;#34;: &amp;#34;echo &amp;#39;Hello syslog&amp;#39;&amp;#34;, &amp;#34;schedule&amp;#34;: &amp;#34;@every 2m&amp;#34;, &amp;#34;tags&amp;#34;: { &amp;#34;role&amp;#34;: &amp;#34;web&amp;#34; }, &amp;#34;processors&amp;#34;: { &amp;#34;syslog&amp;#34;: { &amp;#34;forward&amp;#34;: true } } } </description>
    </item>
    
    <item>
      <title>Upgrade from v1 to v2</title>
      <link>/upgrading/from_v1_to_v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/upgrading/from_v1_to_v2/</guid>
      <description>Dkron v2 brings lots of changes to the previous version. To successfully upgrade from v1 to v2 you need to take care of certain steps.
Storage Dkron v2 brings native storage, no external storage engine is needed. This change can be shocking for existing users and should be carefully planned to consider Dkron as a stateful service in contrast of a stateless service as in v1.
You must plan a backup strategy for the data directories, you can configure it using the --data-dir parameter, by default .</description>
    </item>
    
    <item>
      <title>Upgrade from v1 to v2</title>
      <link>/v2.0/upgrading/from_v1_to_v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/upgrading/from_v1_to_v2/</guid>
      <description>Dkron v2 brings lots of changes to the previous version. To successfully upgrade from v1 to v2 you need to take care of certain steps.
Storage Dkron v2 brings native storage, no external storage engine is needed. This change can be shocking for existing users and should be carefully planned to consider Dkron as a stateful service in contrast of a stateless service as in v1.
You must plan a backup strategy for the data directories, you can configure it using the --data-dir parameter, by default .</description>
    </item>
    
    <item>
      <title>Upgrade from v2.0.x to v2.2.x</title>
      <link>/upgrading/from_v2_0_to_v2_2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/upgrading/from_v2_0_to_v2_2/</guid>
      <description>Migrating Jobs To migrate jobs from v2.0.x to v2.2.x, export jobs from the v2.0.x cluster and import them into v2.2.x
Refer to the backup&amp;amp;restore upgrade guide</description>
    </item>
    
    <item>
      <title>Upgrade methods</title>
      <link>/usage/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/upgrade/</guid>
      <description>Use one of the following methods (depending on the changes) to upgrade a cluster to a newer version.
Rolling upgrade Use the following procedure to rotate all cluster nodes, one server at a time:
 Add a new servers to the cluster with a configuration that joins them to the existing cluter. Stop dkron service in one of the old servers, if it was the leader allow a new leader to be ellected, note that it is better to remove the current leader at the end, to ensure a leader is elected between the new nodes.</description>
    </item>
    
    <item>
      <title>Use with AWS ECS</title>
      <link>/usage/ecs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/usage/ecs/</guid>
      <description>Dkron Pro comes with a native ECS executor out of the box.
 Use with Amazon ECS To use Dkron to schedule jobs that run in containers, a wrapper ECS script is needed.
Install the following snippet in the node that will run the call to ECS
 Prerequisites The node that will run the call to ECS will need to have installed
 AWS cli jq  Example ecs-run --cluster cron --task-definition cron-taskdef --container-name cron --region us-east-1 --command &amp;quot;rake foo&amp;quot;</description>
    </item>
    
    <item>
      <title>Use with AWS ECS</title>
      <link>/v1.2/usage/ecs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.2/usage/ecs/</guid>
      <description>Dkron Pro comes with a native ECS executor out of the box.
 Use with Amazon ECS To use Dkron to schedule jobs that run in containers, a wrapper ECS script is needed.
Install the following snippet in the node that will run the call to ECS
 Prerequisites The node that will run the call to ECS will need to have installed
 AWS cli jq  Example ecs-run --cluster cron --task-definition cron-taskdef --container-name cron --region us-east-1 --command &amp;quot;rake foo&amp;quot;</description>
    </item>
    
    <item>
      <title>Use with AWS ECS</title>
      <link>/v2.0/usage/ecs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v2.0/usage/ecs/</guid>
      <description>Dkron Pro comes with a native ECS executor out of the box.
 Use with Amazon ECS To use Dkron to schedule jobs that run in containers, a wrapper ECS script is needed.
Install the following snippet in the node that will run the call to ECS
 Prerequisites The node that will run the call to ECS will need to have installed
 AWS cli jq  Example ecs-run --cluster cron --task-definition cron-taskdef --container-name cron --region us-east-1 --command &amp;quot;rake foo&amp;quot;</description>
    </item>
    
  </channel>
</rss>